{
  "type_name": "kiara_plugin.core_types",
  "documentation": {
    "description": "Core data types for kiara.",
    "doc": "[![PyPI status](https://img.shields.io/pypi/status/kiara_plugin.core_types.svg)](https://pypi.python.org/pypi/kiara_plugin.core_types/)\n[![PyPI version](https://img.shields.io/pypi/v/kiara_plugin.core_types.svg)](https://pypi.python.org/pypi/kiara_plugin.core_types/)\n[![PyPI pyversions](https://img.shields.io/pypi/pyversions/kiara_plugin.core_types.svg)](https://pypi.python.org/pypi/kiara_plugin.core_types/)\n[![Build Status](https://img.shields.io/endpoint.svg?url=https%3A%2F%2Factions-badge.atrox.dev%2FDHARPA-Project%2Fkiara%2Fbadge%3Fref%3Ddevelop&style=flat)](https://actions-badge.atrox.dev/DHARPA-Project/kiara_plugin.core_types/goto?ref=develop)\n[![Coverage Status](https://coveralls.io/repos/github/DHARPA-Project/kiara_plugin.core_types/badge.svg?branch=develop)](https://coveralls.io/github/DHARPA-Project/kiara_plugin.core_types?branch=develop)\n[![Code style](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/ambv/black)\n\n# [**kiara**](https://dharpa.org/kiara.documentation) plugin: (core-types)\n\nCore data types for kiara.\n\n - Documentation: [https://DHARPA-Project.github.io/kiara_plugin.core_types](https://DHARPA-Project.github.io/kiara_plugin.core_types)\n - Code: [https://github.com/DHARPA-Project/kiara_plugin.core_types](https://github.com/DHARPA-Project/kiara_plugin.core_types)\n - `kiara`: [https://dharpa.org/kiara.documentation](https://dharpa.org/kiara.documentation)\n\n## Description\n\nTODO\n\n## Development\n\n### Requirements\n\n- Python (version >= 3.8)\n- pip, virtualenv\n- git\n- make (on Linux / Mac OS X -- optional)\n\n\n### Prepare development environment\n\nIf you only want to work on the modules, and not the core *Kiara* codebase, follow the instructions below. Otherwise, please\ncheck the notes on how to setup a *Kiara* development environment under (TODO).\n\n#### Linux & Mac OS X (using make)\n\nFor *NIX-like operating system, setting up a development environment is relatively easy:\n\n```console\ngit clone https://github.com/DHARPA-Project/kiara_plugin.core_types.git\ncd kiara_plugin.core_types\npython3 -m venv .venv\nsource .venv/bin/activate\nmake init\n```\n\n#### Windows (or manual pip install)\n\nIt's impossible to lay out all the ways Python can be installed on a machine, and virtual- (or conda-)envs can be created, so I'll assume you know how to do this.\nOne simple way is to install the [Anaconda (individual edition)](https://docs.anaconda.com/anaconda/install/index.html), then use the Anaconda navigator to create a new environment, install the 'git' package in it (if your system does not already have it), and use the 'Open Terminal' option of that environment to start up a terminal that has that virtual-/conda-environment activated.\n\nOnce that is done, `cd` into a directory where you want this project folder to live, and do:\n\n```console\n# make sure your virtual env is activated!!!\ngit clone https://github.com/DHARPA-Project/kiara_plugin.core_types.git\ncd kiara_plugin.core_types\npip install --extra-index-url https://pypi.fury.io/dharpa/ -U -e .[all_dev]\n```\n\n#### Try it out\n\nAfter this is done, you should be able to run the included example module via:\n\n```console\nkiara run core_types_example text_1=\"xxx\" text_2=\"yyy\"\n...\n...\n```\n\n### Re-activate the development environment\n\nThe 'prepare' step from above only has to be done once. After that, to re-enable your virtual environment,\nyou'll need to navigate to the directory again (wherever that is, in your case), and run the ``source`` command from before again:\n\n```console\ncd path/to/kiara_plugin.core_types\nsource .venv/bin/activate  # if it isn't activated already, for example by the Anaconda navigator\nkiara --help  # or whatever, point is, kiara should be available for you now,\n```\n\n### ``make`` targets (Linux & Mac OS X)\n\n- ``init``: init development project (install project & dev dependencies into virtualenv, as well as pre-commit git hook)\n- ``update-dependencies``: update development dependencies (mainly the core ``kiara`` package from git)\n- ``flake``: run *flake8* tests\n- ``mypy``: run mypy tests\n- ``test``: run unit tests\n- ``docs``: create static documentation pages (under ``build/site``)\n- ``serve-docs``: serve documentation pages (incl. auto-reload) for getting direct feedback when working on documentation\n- ``clean``: clean build directories\n\nFor details (and other, minor targets), check the ``Makefile``.\n\n\n### Running tests\n\n``` console\n> make test\n# or\n> make coverage\n```\n\n\n## Copyright & license\n\nThis project is MPL v2.0 licensed, for the license text please check the [LICENSE](/LICENSE) file in this repository."
  },
  "authors": {
    "authors": [
      {
        "name": "Markus Binsteiner",
        "email": "markus@frkl.io"
      }
    ]
  },
  "context": {
    "references": {
      "source_repo": {
        "url": "https://github.com/DHARPA-Project/kiara_plugin.core_types",
        "desc": "The module package git repository."
      },
      "documentation": {
        "url": "https://DHARPA-Project.github.io/kiara_plugin.core_types/",
        "desc": "The url for the module package documentation."
      }
    },
    "tags": ["core_types"],
    "labels": {
      "package": "kiara_plugin.core_types"
    }
  },
  "version": "0.5.0",
  "data_types": {
    "group_title": null,
    "item_infos": {
      "integer": {
        "type_name": "integer",
        "documentation": {
          "description": "An integer.",
          "doc": null
        },
        "authors": {
          "authors": [
            {
              "name": "Markus Binsteiner",
              "email": "markus@frkl.io"
            }
          ]
        },
        "context": {
          "references": {
            "source_repo": {
              "url": "https://github.com/DHARPA-Project/kiara_plugin.core_types",
              "desc": "The module package git repository."
            },
            "documentation": {
              "url": "https://DHARPA-Project.github.io/kiara_plugin.core_types/",
              "desc": "The url for the module package documentation."
            }
          },
          "tags": ["core_types"],
          "labels": {
            "package": "kiara_plugin.core_types"
          }
        },
        "python_class": {
          "python_class_name": "IntegerType",
          "python_module_name": "kiara_plugin.core_types.data_types",
          "full_name": "kiara_plugin.core_types.data_types.IntegerType"
        },
        "value_cls": {
          "python_class_name": "int",
          "python_module_name": "builtins",
          "full_name": "int"
        },
        "data_type_config_cls": {
          "python_class_name": "DataTypeConfig",
          "python_module_name": "kiara.data_types",
          "full_name": "kiara.data_types.DataTypeConfig"
        },
        "lineage": ["integer", "any"],
        "qualifier_profiles": {}
      },
      "float": {
        "type_name": "float",
        "documentation": {
          "description": "A float.",
          "doc": null
        },
        "authors": {
          "authors": [
            {
              "name": "Markus Binsteiner",
              "email": "markus@frkl.io"
            }
          ]
        },
        "context": {
          "references": {
            "source_repo": {
              "url": "https://github.com/DHARPA-Project/kiara_plugin.core_types",
              "desc": "The module package git repository."
            },
            "documentation": {
              "url": "https://DHARPA-Project.github.io/kiara_plugin.core_types/",
              "desc": "The url for the module package documentation."
            }
          },
          "tags": ["core_types"],
          "labels": {
            "package": "kiara_plugin.core_types"
          }
        },
        "python_class": {
          "python_class_name": "FloatType",
          "python_module_name": "kiara_plugin.core_types.data_types",
          "full_name": "kiara_plugin.core_types.data_types.FloatType"
        },
        "value_cls": {
          "python_class_name": "float",
          "python_module_name": "builtins",
          "full_name": "float"
        },
        "data_type_config_cls": {
          "python_class_name": "DataTypeConfig",
          "python_module_name": "kiara.data_types",
          "full_name": "kiara.data_types.DataTypeConfig"
        },
        "lineage": ["float", "any"],
        "qualifier_profiles": {}
      },
      "date": {
        "type_name": "date",
        "documentation": {
          "description": "A date.",
          "doc": "Internally, this will always be represented as a Python ``datetime`` object. Iff provided as input, it can also\nbe as string, in which case the [``dateutils.parser.parse``](https://dateutil.readthedocs.io/en/stable/parser.html#dateutil.parser.parse) method will be used to parse the string into a datetime object."
        },
        "authors": {
          "authors": [
            {
              "name": "Markus Binsteiner",
              "email": "markus@frkl.io"
            }
          ]
        },
        "context": {
          "references": {
            "source_repo": {
              "url": "https://github.com/DHARPA-Project/kiara_plugin.core_types",
              "desc": "The module package git repository."
            },
            "documentation": {
              "url": "https://DHARPA-Project.github.io/kiara_plugin.core_types/",
              "desc": "The url for the module package documentation."
            }
          },
          "tags": ["core_types"],
          "labels": {
            "package": "kiara_plugin.core_types"
          }
        },
        "python_class": {
          "python_class_name": "DateType",
          "python_module_name": "kiara_plugin.core_types.data_types",
          "full_name": "kiara_plugin.core_types.data_types.DateType"
        },
        "value_cls": {
          "python_class_name": "datetime",
          "python_module_name": "datetime",
          "full_name": "datetime.datetime"
        },
        "data_type_config_cls": {
          "python_class_name": "DataTypeConfig",
          "python_module_name": "kiara.data_types",
          "full_name": "kiara.data_types.DataTypeConfig"
        },
        "lineage": ["date", "any"],
        "qualifier_profiles": {}
      },
      "list": {
        "type_name": "list",
        "documentation": {
          "description": "A list.",
          "doc": "Backed by the [kiara_plugin.core_types.models.ListModel] class, this data type allows to (optionally) specify\na schema for the items in the list."
        },
        "authors": {
          "authors": [
            {
              "name": "Markus Binsteiner",
              "email": "markus@frkl.io"
            }
          ]
        },
        "context": {
          "references": {
            "source_repo": {
              "url": "https://github.com/DHARPA-Project/kiara_plugin.core_types",
              "desc": "The module package git repository."
            },
            "documentation": {
              "url": "https://DHARPA-Project.github.io/kiara_plugin.core_types/",
              "desc": "The url for the module package documentation."
            }
          },
          "tags": ["core_types"],
          "labels": {
            "package": "kiara_plugin.core_types"
          }
        },
        "python_class": {
          "python_class_name": "ListValueType",
          "python_module_name": "kiara_plugin.core_types.data_types",
          "full_name": "kiara_plugin.core_types.data_types.ListValueType"
        },
        "value_cls": {
          "python_class_name": "KiaraList",
          "python_module_name": "kiara_plugin.core_types.models",
          "full_name": "kiara_plugin.core_types.models.KiaraList"
        },
        "data_type_config_cls": {
          "python_class_name": "DataTypeConfig",
          "python_module_name": "kiara.data_types",
          "full_name": "kiara.data_types.DataTypeConfig"
        },
        "lineage": ["list", "any"],
        "qualifier_profiles": {}
      },
      "kiara_model": {
        "type_name": "kiara_model",
        "documentation": {
          "description": "A model.",
          "doc": null
        },
        "authors": {
          "authors": [
            {
              "name": "Markus Binsteiner",
              "email": "markus@frkl.io"
            }
          ]
        },
        "context": {
          "references": {
            "source_repo": {
              "url": "https://github.com/DHARPA-Project/kiara_plugin.core_types",
              "desc": "The module package git repository."
            },
            "documentation": {
              "url": "https://DHARPA-Project.github.io/kiara_plugin.core_types/",
              "desc": "The url for the module package documentation."
            }
          },
          "tags": ["core_types"],
          "labels": {
            "package": "kiara_plugin.core_types"
          }
        },
        "python_class": {
          "python_class_name": "KiaraModelType",
          "python_module_name": "kiara_plugin.core_types.data_types.models",
          "full_name": "kiara_plugin.core_types.data_types.models.KiaraModelType"
        },
        "value_cls": {
          "python_class_name": "KiaraModel",
          "python_module_name": "kiara.models",
          "full_name": "kiara.models.KiaraModel"
        },
        "data_type_config_cls": {
          "python_class_name": "KiaraModelTypeConfig",
          "python_module_name": "kiara_plugin.core_types.data_types.models",
          "full_name": "kiara_plugin.core_types.data_types.models.KiaraModelTypeConfig"
        },
        "lineage": ["kiara_model", "any"],
        "qualifier_profiles": {}
      },
      "kiara_model_list": {
        "type_name": "kiara_model_list",
        "documentation": {
          "description": "A model.",
          "doc": null
        },
        "authors": {
          "authors": [
            {
              "name": "Markus Binsteiner",
              "email": "markus@frkl.io"
            }
          ]
        },
        "context": {
          "references": {
            "source_repo": {
              "url": "https://github.com/DHARPA-Project/kiara_plugin.core_types",
              "desc": "The module package git repository."
            },
            "documentation": {
              "url": "https://DHARPA-Project.github.io/kiara_plugin.core_types/",
              "desc": "The url for the module package documentation."
            }
          },
          "tags": ["core_types"],
          "labels": {
            "package": "kiara_plugin.core_types"
          }
        },
        "python_class": {
          "python_class_name": "KiaraModelListType",
          "python_module_name": "kiara_plugin.core_types.data_types.models",
          "full_name": "kiara_plugin.core_types.data_types.models.KiaraModelListType"
        },
        "value_cls": {
          "python_class_name": "KiaraModelList",
          "python_module_name": "kiara_plugin.core_types.data_types.models",
          "full_name": "kiara_plugin.core_types.data_types.models.KiaraModelList"
        },
        "data_type_config_cls": {
          "python_class_name": "KiaraModelTypeConfig",
          "python_module_name": "kiara_plugin.core_types.data_types.models",
          "full_name": "kiara_plugin.core_types.data_types.models.KiaraModelTypeConfig"
        },
        "lineage": ["kiara_model_list", "any"],
        "qualifier_profiles": {}
      }
    },
    "type_name": "data_type"
  },
  "module_types": {
    "group_title": null,
    "item_infos": {
      "string.filters": {
        "type_name": "string.filters",
        "documentation": {
          "description": "-- n/a --",
          "doc": null
        },
        "authors": {
          "authors": [
            {
              "name": "Markus Binsteiner",
              "email": "markus@frkl.io"
            }
          ]
        },
        "context": {
          "references": {
            "source_repo": {
              "url": "https://github.com/DHARPA-Project/kiara_plugin.core_types",
              "desc": "The module package git repository."
            },
            "documentation": {
              "url": "https://DHARPA-Project.github.io/kiara_plugin.core_types/",
              "desc": "The url for the module package documentation."
            }
          },
          "tags": ["core_types"],
          "labels": {
            "package": "kiara_plugin.core_types"
          }
        },
        "python_class": {
          "python_class_name": "StringFiltersModule",
          "python_module_name": "kiara_plugin.core_types.modules.string",
          "full_name": "kiara_plugin.core_types.modules.string.StringFiltersModule"
        },
        "module_config": {
          "python_class": {
            "python_class_name": "FilterModuleConfig",
            "python_module_name": "kiara.modules.included_core_modules.filter",
            "full_name": "kiara.modules.included_core_modules.filter.FilterModuleConfig"
          },
          "config_values": {
            "constants": {
              "description": "Value constants for this module.",
              "type": "object",
              "value_default": null,
              "required": false
            },
            "defaults": {
              "description": "Value defaults for this module.",
              "type": "object",
              "value_default": null,
              "required": false
            },
            "filter_name": {
              "description": "The name of the filter.",
              "type": "string",
              "value_default": null,
              "required": true
            }
          }
        },
        "module_src": "class StringFiltersModule(FilterModule):\n\n    _module_type_name = \"string.filters\"\n\n    @classmethod\n    def retrieve_supported_type(cls) -> Union[Dict[str, Any], str]:\n\n        return \"string\"\n\n    def create_filter_inputs(self, filter_name: str) -> Union[None, ValueMapSchema]:\n\n        if filter_name == \"tokens\":\n            return {\n                \"filter_tokens\": {\n                    \"type\": \"list\",\n                    \"doc\": \"A list of tokens to filter out.\",\n                    \"optional\": True,\n                },\n                \"replacement\": {\n                    \"type\": \"string\",\n                    \"doc\": \"The string to replace the tokens with.\",\n                    \"default\": \"\",\n                },\n            }\n\n        return None\n\n    def filter__tokens(self, value: Value, filter_inputs: Mapping[str, Any]):\n\n        tokens = filter_inputs.get(\"filter_tokens\", None)\n        if not tokens:\n            return None\n\n        repl = filter_inputs.get(\"replacement\")\n\n        result: str = value.data\n        for token in tokens:\n            result = result.replace(token, repl)  # type: ignore\n\n        return result\n"
      },
      "load.kiara_model": {
        "type_name": "load.kiara_model",
        "documentation": {
          "description": "-- n/a --",
          "doc": null
        },
        "authors": {
          "authors": [
            {
              "name": "Markus Binsteiner",
              "email": "markus@frkl.io"
            }
          ]
        },
        "context": {
          "references": {
            "source_repo": {
              "url": "https://github.com/DHARPA-Project/kiara_plugin.core_types",
              "desc": "The module package git repository."
            },
            "documentation": {
              "url": "https://DHARPA-Project.github.io/kiara_plugin.core_types/",
              "desc": "The url for the module package documentation."
            }
          },
          "tags": ["core_types"],
          "labels": {
            "package": "kiara_plugin.core_types"
          }
        },
        "python_class": {
          "python_class_name": "LoadKiaraModel",
          "python_module_name": "kiara_plugin.core_types.modules.models",
          "full_name": "kiara_plugin.core_types.modules.models.LoadKiaraModel"
        },
        "module_config": {
          "python_class": {
            "python_class_name": "SerializeConfig",
            "python_module_name": "kiara.modules.included_core_modules.serialization",
            "full_name": "kiara.modules.included_core_modules.serialization.SerializeConfig"
          },
          "config_values": {
            "constants": {
              "description": "Value constants for this module.",
              "type": "object",
              "value_default": null,
              "required": false
            },
            "defaults": {
              "description": "Value defaults for this module.",
              "type": "object",
              "value_default": null,
              "required": false
            },
            "value_type": {
              "description": "The value type of the actual (unserialized) value.",
              "type": "string",
              "value_default": null,
              "required": true
            },
            "target_profile": {
              "description": "The profile name of the de-serialization result data.",
              "type": "string",
              "value_default": null,
              "required": true
            },
            "serialization_profile": {
              "description": "The name of the serialization profile used to serialize the source value.",
              "type": "string",
              "value_default": null,
              "required": true
            }
          }
        },
        "module_src": "class LoadKiaraModel(DeserializeValueModule):\n\n    _module_type_name = \"load.kiara_model\"\n\n    @classmethod\n    def retrieve_supported_target_profiles(cls) -> Mapping[str, Type]:\n        return {\"python_object\": KiaraModel}\n\n    @classmethod\n    def retrieve_supported_serialization_profile(cls) -> str:\n        return \"json\"\n\n    @classmethod\n    def retrieve_serialized_value_type(cls) -> str:\n        return \"kiara_model\"\n\n    def to__python_object(self, data: SerializedData, **config: Any) -> KiaraModel:\n\n        chunks = data.get_serialized_data(\"data\")\n        assert chunks.get_number_of_chunks() == 1\n        _chunks = list(chunks.get_chunks(as_files=False))\n        assert len(_chunks) == 1\n\n        bytes_string: bytes = _chunks[0]  # type: ignore\n        model_data = orjson.loads(bytes_string)\n\n        model_id: str = data.data_type_config[\"kiara_model_id\"]\n        model_registry = ModelRegistry.instance()\n        m_cls = model_registry.get_model_cls(kiara_model_id=model_id)\n\n        obj = m_cls(**model_data)\n        return obj\n"
      },
      "load.kiara_model_list": {
        "type_name": "load.kiara_model_list",
        "documentation": {
          "description": "-- n/a --",
          "doc": null
        },
        "authors": {
          "authors": [
            {
              "name": "Markus Binsteiner",
              "email": "markus@frkl.io"
            }
          ]
        },
        "context": {
          "references": {
            "source_repo": {
              "url": "https://github.com/DHARPA-Project/kiara_plugin.core_types",
              "desc": "The module package git repository."
            },
            "documentation": {
              "url": "https://DHARPA-Project.github.io/kiara_plugin.core_types/",
              "desc": "The url for the module package documentation."
            }
          },
          "tags": ["core_types"],
          "labels": {
            "package": "kiara_plugin.core_types"
          }
        },
        "python_class": {
          "python_class_name": "LoadKiaraModelList",
          "python_module_name": "kiara_plugin.core_types.modules.models",
          "full_name": "kiara_plugin.core_types.modules.models.LoadKiaraModelList"
        },
        "module_config": {
          "python_class": {
            "python_class_name": "SerializeConfig",
            "python_module_name": "kiara.modules.included_core_modules.serialization",
            "full_name": "kiara.modules.included_core_modules.serialization.SerializeConfig"
          },
          "config_values": {
            "constants": {
              "description": "Value constants for this module.",
              "type": "object",
              "value_default": null,
              "required": false
            },
            "defaults": {
              "description": "Value defaults for this module.",
              "type": "object",
              "value_default": null,
              "required": false
            },
            "value_type": {
              "description": "The value type of the actual (unserialized) value.",
              "type": "string",
              "value_default": null,
              "required": true
            },
            "target_profile": {
              "description": "The profile name of the de-serialization result data.",
              "type": "string",
              "value_default": null,
              "required": true
            },
            "serialization_profile": {
              "description": "The name of the serialization profile used to serialize the source value.",
              "type": "string",
              "value_default": null,
              "required": true
            }
          }
        },
        "module_src": "class LoadKiaraModelList(DeserializeValueModule):\n\n    _module_type_name = \"load.kiara_model_list\"\n\n    @classmethod\n    def retrieve_supported_target_profiles(cls) -> Mapping[str, Type]:\n        return {\"python_object\": KiaraModelList}\n\n    @classmethod\n    def retrieve_supported_serialization_profile(cls) -> str:\n        return \"json\"\n\n    @classmethod\n    def retrieve_serialized_value_type(cls) -> str:\n        return \"kiara_model_list\"\n\n    def to__python_object(self, data: SerializedData, **config: Any) -> KiaraModelList:\n\n        model_id: str = data.data_type_config[\"kiara_model_id\"]\n        model_registry = ModelRegistry.instance()\n        m_cls = model_registry.get_model_cls(kiara_model_id=model_id)\n\n        items = []\n\n        for chunk_id in sorted(data.get_keys()):\n            chunks = data.get_serialized_data(chunk_id)\n            assert chunks.get_number_of_chunks() == 1\n\n            _chunks = list(chunks.get_chunks(as_files=False))\n            assert len(_chunks) == 1\n\n            bytes_string: bytes = _chunks[0]  # type: ignore\n            model_data = orjson.loads(bytes_string)\n\n            _obj = m_cls(**model_data)\n            items.append(_obj)\n\n        obj: KiaraModelList[KiaraModel] = KiaraModelList(\n            list_items=items, kiara_model_id=model_id\n        )\n        return obj\n"
      },
      "logic.not": {
        "type_name": "logic.not",
        "documentation": {
          "description": "Negates the input.",
          "doc": null
        },
        "authors": {
          "authors": [
            {
              "name": "Markus Binsteiner",
              "email": "markus@frkl.io"
            }
          ]
        },
        "context": {
          "references": {
            "source_repo": {
              "url": "https://github.com/DHARPA-Project/kiara_plugin.core_types",
              "desc": "The module package git repository."
            },
            "documentation": {
              "url": "https://DHARPA-Project.github.io/kiara_plugin.core_types/",
              "desc": "The url for the module package documentation."
            }
          },
          "tags": ["core_types"],
          "labels": {
            "package": "kiara_plugin.core_types"
          }
        },
        "python_class": {
          "python_class_name": "NotModule",
          "python_module_name": "kiara_plugin.core_types.modules.boolean",
          "full_name": "kiara_plugin.core_types.modules.boolean.NotModule"
        },
        "module_config": {
          "python_class": {
            "python_class_name": "LogicProcessingModuleConfig",
            "python_module_name": "kiara_plugin.core_types.modules.boolean",
            "full_name": "kiara_plugin.core_types.modules.boolean.LogicProcessingModuleConfig"
          },
          "config_values": {
            "constants": {
              "description": "Value constants for this module.",
              "type": "object",
              "value_default": null,
              "required": false
            },
            "defaults": {
              "description": "Value defaults for this module.",
              "type": "object",
              "value_default": null,
              "required": false
            },
            "delay": {
              "description": "the delay in seconds from processing start to when the output is returned.",
              "type": "number",
              "value_default": 0,
              "required": false
            }
          }
        },
        "module_src": "class NotModule(LogicProcessingModule):\n    \"\"\"Negates the input.\"\"\"\n\n    _module_type_name = \"logic.not\"\n\n    def create_inputs_schema(\n        self,\n    ) -> ValueMapSchema:\n        \"\"\"The not module only has one input, a boolean that will be negated by the module.\"\"\"\n\n        return {\n            \"a\": {\"type\": \"boolean\", \"doc\": \"A boolean describing this input state.\"}\n        }\n\n    def create_outputs_schema(\n        self,\n    ) -> ValueMapSchema:\n        \"\"\"The output of this module is a single boolean, the negated input.\"\"\"\n\n        return {\n            \"y\": {\n                \"type\": \"boolean\",\n                \"doc\": \"A boolean describing the module output state.\",\n            }\n        }\n\n    def process(self, inputs: ValueMap, outputs: ValueMap) -> None:\n        \"\"\"Negates the input boolean.\"\"\"\n\n        time.sleep(self.config.get(\"delay\"))  # type: ignore\n\n        outputs.set_value(\"y\", not inputs.get_value_data(\"a\"))\n"
      },
      "logic.and": {
        "type_name": "logic.and",
        "documentation": {
          "description": "Returns 'True' if both inputs are 'True'.",
          "doc": null
        },
        "authors": {
          "authors": [
            {
              "name": "Markus Binsteiner",
              "email": "markus@frkl.io"
            }
          ]
        },
        "context": {
          "references": {
            "source_repo": {
              "url": "https://github.com/DHARPA-Project/kiara_plugin.core_types",
              "desc": "The module package git repository."
            },
            "documentation": {
              "url": "https://DHARPA-Project.github.io/kiara_plugin.core_types/",
              "desc": "The url for the module package documentation."
            }
          },
          "tags": ["core_types"],
          "labels": {
            "package": "kiara_plugin.core_types"
          }
        },
        "python_class": {
          "python_class_name": "AndModule",
          "python_module_name": "kiara_plugin.core_types.modules.boolean",
          "full_name": "kiara_plugin.core_types.modules.boolean.AndModule"
        },
        "module_config": {
          "python_class": {
            "python_class_name": "LogicProcessingModuleConfig",
            "python_module_name": "kiara_plugin.core_types.modules.boolean",
            "full_name": "kiara_plugin.core_types.modules.boolean.LogicProcessingModuleConfig"
          },
          "config_values": {
            "constants": {
              "description": "Value constants for this module.",
              "type": "object",
              "value_default": null,
              "required": false
            },
            "defaults": {
              "description": "Value defaults for this module.",
              "type": "object",
              "value_default": null,
              "required": false
            },
            "delay": {
              "description": "the delay in seconds from processing start to when the output is returned.",
              "type": "number",
              "value_default": 0,
              "required": false
            }
          }
        },
        "module_src": "class AndModule(LogicProcessingModule):\n    \"\"\"Returns 'True' if both inputs are 'True'.\"\"\"\n\n    _module_type_name = \"logic.and\"\n\n    def create_inputs_schema(\n        self,\n    ) -> ValueMapSchema:\n        return {\n            \"a\": {\"type\": \"boolean\", \"doc\": \"A boolean describing this input state.\"},\n            \"b\": {\"type\": \"boolean\", \"doc\": \"A boolean describing this input state.\"},\n        }\n\n    def create_outputs_schema(\n        self,\n    ) -> ValueMapSchema:\n        return {\n            \"y\": {\n                \"type\": \"boolean\",\n                \"doc\": \"A boolean describing the module output state.\",\n            }\n        }\n\n    def process(self, inputs: ValueMap, outputs: ValueMap) -> None:\n\n        time.sleep(self.config.delay)  # type: ignore\n\n        outputs.set_value(\n            \"y\", inputs.get_value_data(\"a\") and inputs.get_value_data(\"b\")\n        )\n"
      },
      "logic.or": {
        "type_name": "logic.or",
        "documentation": {
          "description": "Returns 'True' if one of the inputs is 'True'.",
          "doc": null
        },
        "authors": {
          "authors": [
            {
              "name": "Markus Binsteiner",
              "email": "markus@frkl.io"
            }
          ]
        },
        "context": {
          "references": {
            "source_repo": {
              "url": "https://github.com/DHARPA-Project/kiara_plugin.core_types",
              "desc": "The module package git repository."
            },
            "documentation": {
              "url": "https://DHARPA-Project.github.io/kiara_plugin.core_types/",
              "desc": "The url for the module package documentation."
            }
          },
          "tags": ["core_types"],
          "labels": {
            "package": "kiara_plugin.core_types"
          }
        },
        "python_class": {
          "python_class_name": "OrModule",
          "python_module_name": "kiara_plugin.core_types.modules.boolean",
          "full_name": "kiara_plugin.core_types.modules.boolean.OrModule"
        },
        "module_config": {
          "python_class": {
            "python_class_name": "LogicProcessingModuleConfig",
            "python_module_name": "kiara_plugin.core_types.modules.boolean",
            "full_name": "kiara_plugin.core_types.modules.boolean.LogicProcessingModuleConfig"
          },
          "config_values": {
            "constants": {
              "description": "Value constants for this module.",
              "type": "object",
              "value_default": null,
              "required": false
            },
            "defaults": {
              "description": "Value defaults for this module.",
              "type": "object",
              "value_default": null,
              "required": false
            },
            "delay": {
              "description": "the delay in seconds from processing start to when the output is returned.",
              "type": "number",
              "value_default": 0,
              "required": false
            }
          }
        },
        "module_src": "class OrModule(LogicProcessingModule):\n    \"\"\"Returns 'True' if one of the inputs is 'True'.\"\"\"\n\n    _module_type_name = \"logic.or\"\n\n    def create_inputs_schema(\n        self,\n    ) -> ValueMapSchema:\n\n        return {\n            \"a\": {\"type\": \"boolean\", \"doc\": \"A boolean describing this input state.\"},\n            \"b\": {\"type\": \"boolean\", \"doc\": \"A boolean describing this input state.\"},\n        }\n\n    def create_outputs_schema(\n        self,\n    ) -> ValueMapSchema:\n\n        return {\n            \"y\": {\n                \"type\": \"boolean\",\n                \"doc\": \"A boolean describing the module output state.\",\n            }\n        }\n\n    def process(self, inputs: ValueMap, outputs: ValueMap) -> None:\n\n        time.sleep(self.config.get(\"delay\"))  # type: ignore\n        outputs.set_value(\"y\", inputs.get_value_data(\"a\") or inputs.get_value_data(\"b\"))\n"
      },
      "date.extract_from_string": {
        "type_name": "date.extract_from_string",
        "documentation": {
          "description": "Extract a date object from a string.",
          "doc": "This module is very bare bones so far, only using the standard parser from the\n[dateutil](https://github.com/dateutil/dateutil) package to parse strings into dates."
        },
        "authors": {
          "authors": [
            {
              "name": "Markus Binsteiner",
              "email": "markus@frkl.io"
            }
          ]
        },
        "context": {
          "references": {
            "source_repo": {
              "url": "https://github.com/DHARPA-Project/kiara_plugin.core_types",
              "desc": "The module package git repository."
            },
            "documentation": {
              "url": "https://DHARPA-Project.github.io/kiara_plugin.core_types/",
              "desc": "The url for the module package documentation."
            }
          },
          "tags": ["core_types"],
          "labels": {
            "package": "kiara_plugin.core_types"
          }
        },
        "python_class": {
          "python_class_name": "ExtractDateModule",
          "python_module_name": "kiara_plugin.core_types.modules.date",
          "full_name": "kiara_plugin.core_types.modules.date.ExtractDateModule"
        },
        "module_config": {
          "python_class": {
            "python_class_name": "KiaraModuleConfig",
            "python_module_name": "kiara.models.module",
            "full_name": "kiara.models.module.KiaraModuleConfig"
          },
          "config_values": {
            "constants": {
              "description": "Value constants for this module.",
              "type": "object",
              "value_default": null,
              "required": false
            },
            "defaults": {
              "description": "Value defaults for this module.",
              "type": "object",
              "value_default": null,
              "required": false
            }
          }
        },
        "module_src": "class ExtractDateModule(KiaraModule):\n    \"\"\"Extract a date object from a string.\n\n    This module is very bare bones so far, only using the standard parser from the\n    [dateutil](https://github.com/dateutil/dateutil) package to parse strings into dates.\n    \"\"\"\n\n    _module_type_name = \"date.extract_from_string\"\n\n    def create_inputs_schema(\n        self,\n    ) -> ValueMapSchema:\n\n        return {\"text\": {\"type\": \"string\", \"doc\": \"The input string.\"}}\n\n    def create_outputs_schema(\n        self,\n    ) -> ValueMapSchema:\n\n        return {\n            \"date\": {\"type\": \"date\", \"doc\": \"The date extracted from the input string.\"}\n        }\n\n    def process(self, inputs: ValueMap, outputs: ValueMap) -> None:\n\n        from dateutil import parser\n\n        text = inputs.get_value_data(\"text\")\n        # date_match = re.findall(r\"_(\\d{4}-\\d{2}-\\d{2})_\", text)\n        # assert date_match\n        # d_obj = parser.parse(date_match[0])  # type: ignore\n        d_obj = parser.parse(text, fuzzy=True)\n\n        outputs.set_value(\"date\", d_obj)\n"
      },
      "date.check_range": {
        "type_name": "date.check_range",
        "documentation": {
          "description": "Check whether a date falls within a specified date range.",
          "doc": "If none one of the inputs 'earliest' or 'latest' is set, this module will always return 'True'.\n\nReturn ``True`` if that's the case, otherwise ``False``."
        },
        "authors": {
          "authors": [
            {
              "name": "Markus Binsteiner",
              "email": "markus@frkl.io"
            }
          ]
        },
        "context": {
          "references": {
            "source_repo": {
              "url": "https://github.com/DHARPA-Project/kiara_plugin.core_types",
              "desc": "The module package git repository."
            },
            "documentation": {
              "url": "https://DHARPA-Project.github.io/kiara_plugin.core_types/",
              "desc": "The url for the module package documentation."
            }
          },
          "tags": ["core_types"],
          "labels": {
            "package": "kiara_plugin.core_types"
          }
        },
        "python_class": {
          "python_class_name": "DateRangeCheckModule",
          "python_module_name": "kiara_plugin.core_types.modules.date",
          "full_name": "kiara_plugin.core_types.modules.date.DateRangeCheckModule"
        },
        "module_config": {
          "python_class": {
            "python_class_name": "KiaraModuleConfig",
            "python_module_name": "kiara.models.module",
            "full_name": "kiara.models.module.KiaraModuleConfig"
          },
          "config_values": {
            "constants": {
              "description": "Value constants for this module.",
              "type": "object",
              "value_default": null,
              "required": false
            },
            "defaults": {
              "description": "Value defaults for this module.",
              "type": "object",
              "value_default": null,
              "required": false
            }
          }
        },
        "module_src": "class DateRangeCheckModule(KiaraModule):\n    \"\"\"Check whether a date falls within a specified date range.\n\n    If none one of the inputs 'earliest' or 'latest' is set, this module will always return 'True'.\n\n    Return ``True`` if that's the case, otherwise ``False``.\n    \"\"\"\n\n    _module_type_name = \"date.check_range\"\n\n    def create_inputs_schema(\n        self,\n    ) -> ValueMapSchema:\n\n        inputs: Dict[str, Dict[str, Any]] = {\n            \"date\": {\"type\": \"date\", \"doc\": \"The date to check.\"},\n            \"earliest\": {\n                \"type\": \"date\",\n                \"doc\": \"The earliest date that is allowed.\",\n                \"optional\": True,\n            },\n            \"latest\": {\n                \"type\": \"date\",\n                \"doc\": \"The latest date that is allowed.\",\n                \"optional\": True,\n            },\n        }\n\n        return inputs\n\n    def create_outputs_schema(\n        self,\n    ) -> ValueMapSchema:\n\n        outputs = {\n            \"within_range\": {\n                \"type\": \"boolean\",\n                \"doc\": \"A boolean indicating whether the provided date was within the allowed range ('true'), or not ('false')\",\n            }\n        }\n        return outputs\n\n    def process(self, inputs: ValueMap, outputs: ValueMap) -> None:\n\n        d: datetime.datetime = inputs.get_value_data(\"date\")\n        earliest: Union[datetime.datetime, None] = inputs.get_value_data(\"earliest\")\n        latest: Union[datetime.datetime, None] = inputs.get_value_data(\"latest\")\n\n        if not earliest and not latest:\n            outputs.set_value(\"within_range\", True)\n            return\n\n        if not isinstance(d, datetime.datetime):\n            raise KiaraProcessingException(f\"Invalid format for input date: {type(d)}\")\n\n        if earliest and latest:\n            matches = earliest <= d <= latest\n        elif earliest:\n            matches = earliest <= d\n        else:\n            matches = d <= latest  # type: ignore\n\n        outputs.set_value(\"within_range\", matches)\n"
      },
      "list.contains": {
        "type_name": "list.contains",
        "documentation": {
          "description": "Check whether an element is in a list.",
          "doc": null
        },
        "authors": {
          "authors": [
            {
              "name": "Markus Binsteiner",
              "email": "markus@frkl.io"
            }
          ]
        },
        "context": {
          "references": {
            "source_repo": {
              "url": "https://github.com/DHARPA-Project/kiara_plugin.core_types",
              "desc": "The module package git repository."
            },
            "documentation": {
              "url": "https://DHARPA-Project.github.io/kiara_plugin.core_types/",
              "desc": "The url for the module package documentation."
            }
          },
          "tags": ["core_types"],
          "labels": {
            "package": "kiara_plugin.core_types"
          }
        },
        "python_class": {
          "python_class_name": "IncludedInListCheckModule",
          "python_module_name": "kiara_plugin.core_types.modules.list",
          "full_name": "kiara_plugin.core_types.modules.list.IncludedInListCheckModule"
        },
        "module_config": {
          "python_class": {
            "python_class_name": "KiaraModuleConfig",
            "python_module_name": "kiara.models.module",
            "full_name": "kiara.models.module.KiaraModuleConfig"
          },
          "config_values": {
            "constants": {
              "description": "Value constants for this module.",
              "type": "object",
              "value_default": null,
              "required": false
            },
            "defaults": {
              "description": "Value defaults for this module.",
              "type": "object",
              "value_default": null,
              "required": false
            }
          }
        },
        "module_src": "class IncludedInListCheckModule(KiaraModule):\n    \"\"\"Check whether an element is in a list.\"\"\"\n\n    _module_type_name = \"list.contains\"\n\n    def create_inputs_schema(\n        self,\n    ) -> ValueMapSchema:\n\n        inputs = {\n            \"list\": {\"type\": \"list\", \"doc\": \"The list.\"},\n            \"item\": {\n                \"type\": \"any\",\n                \"doc\": \"The element to check for inclusion in the list.\",\n            },\n        }\n        return inputs\n\n    def create_outputs_schema(\n        self,\n    ) -> ValueMapSchema:\n\n        outputs = {\n            \"is_included\": {\n                \"type\": \"boolean\",\n                \"doc\": \"Whether the element is in the list, or not.\",\n            }\n        }\n        return outputs\n\n    def process(self, inputs: ValueMap, outputs: ValueMap) -> None:\n\n        item_list = inputs.get_value_data(\"list\")\n        item = inputs.get_value_data(\"item\")\n\n        outputs.set_value(\"is_included\", item in item_list)\n"
      },
      "string.match_regex": {
        "type_name": "string.match_regex",
        "documentation": {
          "description": "Match a string using a regular expression.",
          "doc": null
        },
        "authors": {
          "authors": [
            {
              "name": "Markus Binsteiner",
              "email": "markus@frkl.io"
            }
          ]
        },
        "context": {
          "references": {
            "source_repo": {
              "url": "https://github.com/DHARPA-Project/kiara_plugin.core_types",
              "desc": "The module package git repository."
            },
            "documentation": {
              "url": "https://DHARPA-Project.github.io/kiara_plugin.core_types/",
              "desc": "The url for the module package documentation."
            }
          },
          "tags": ["core_types"],
          "labels": {
            "package": "kiara_plugin.core_types"
          }
        },
        "python_class": {
          "python_class_name": "RegexModule",
          "python_module_name": "kiara_plugin.core_types.modules.string",
          "full_name": "kiara_plugin.core_types.modules.string.RegexModule"
        },
        "module_config": {
          "python_class": {
            "python_class_name": "RegexModuleConfig",
            "python_module_name": "kiara_plugin.core_types.modules.string",
            "full_name": "kiara_plugin.core_types.modules.string.RegexModuleConfig"
          },
          "config_values": {
            "constants": {
              "description": "Value constants for this module.",
              "type": "object",
              "value_default": null,
              "required": false
            },
            "defaults": {
              "description": "Value defaults for this module.",
              "type": "object",
              "value_default": null,
              "required": false
            },
            "regex": {
              "description": "The regex to apply.",
              "type": "string",
              "value_default": null,
              "required": true
            },
            "only_first_match": {
              "description": "Whether to only return the first match, or all matches.",
              "type": "boolean",
              "value_default": false,
              "required": false
            }
          }
        },
        "module_src": "class RegexModule(KiaraModule):\n    \"\"\"Match a string using a regular expression.\"\"\"\n\n    _config_cls = RegexModuleConfig\n    _module_type_name = \"string.match_regex\"\n\n    def create_inputs_schema(\n        self,\n    ) -> ValueMapSchema:\n        return {\"text\": {\"type\": \"string\", \"doc\": \"The text to match.\"}}\n\n    def create_outputs_schema(\n        self,\n    ) -> ValueMapSchema:\n\n        if self.get_config_value(\"only_first_match\"):\n            output_schema = {\"text\": {\"type\": \"string\", \"doc\": \"The first match.\"}}\n        else:\n            raise NotImplementedError()\n\n        return output_schema\n\n    def process(self, inputs: ValueMap, outputs: ValueMap) -> None:\n\n        text = inputs.get_value_data(\"text\")\n        regex = self.get_config_value(\"regex\")\n        matches = re.findall(regex, text)\n\n        if not matches:\n            raise KiaraProcessingException(f\"No match for regex: {regex}\")\n\n        if self.get_config_value(\"only_first_match\"):\n            result = matches[0]\n        else:\n            result = matches\n\n        outputs.set_value(\"text\", result)\n"
      },
      "string.replace": {
        "type_name": "string.replace",
        "documentation": {
          "description": "Replace a string if it matches a key in a mapping dictionary.",
          "doc": null
        },
        "authors": {
          "authors": [
            {
              "name": "Markus Binsteiner",
              "email": "markus@frkl.io"
            }
          ]
        },
        "context": {
          "references": {
            "source_repo": {
              "url": "https://github.com/DHARPA-Project/kiara_plugin.core_types",
              "desc": "The module package git repository."
            },
            "documentation": {
              "url": "https://DHARPA-Project.github.io/kiara_plugin.core_types/",
              "desc": "The url for the module package documentation."
            }
          },
          "tags": ["core_types"],
          "labels": {
            "package": "kiara_plugin.core_types"
          }
        },
        "python_class": {
          "python_class_name": "ReplaceStringModule",
          "python_module_name": "kiara_plugin.core_types.modules.string",
          "full_name": "kiara_plugin.core_types.modules.string.ReplaceStringModule"
        },
        "module_config": {
          "python_class": {
            "python_class_name": "ReplaceModuleConfig",
            "python_module_name": "kiara_plugin.core_types.modules.string",
            "full_name": "kiara_plugin.core_types.modules.string.ReplaceModuleConfig"
          },
          "config_values": {
            "constants": {
              "description": "Value constants for this module.",
              "type": "object",
              "value_default": null,
              "required": false
            },
            "defaults": {
              "description": "Value defaults for this module.",
              "type": "object",
              "value_default": null,
              "required": false
            },
            "replacement_map": {
              "description": "A map, containing the strings to be replaced as keys, and the replacements as values.",
              "type": "object",
              "value_default": null,
              "required": true
            },
            "default_value": {
              "description": "The default value to use if the string to be replaced is not in the replacement map. By default, this just returns the string itself.",
              "type": "anyOf: [{'type': 'string'}, {'type': 'null'}]",
              "value_default": null,
              "required": false
            }
          }
        },
        "module_src": "class ReplaceStringModule(KiaraModule):\n    \"\"\"Replace a string if it matches a key in a mapping dictionary.\"\"\"\n\n    _config_cls = ReplaceModuleConfig\n    _module_type_name = \"string.replace\"\n\n    def create_inputs_schema(\n        self,\n    ) -> ValueMapSchema:\n\n        return {\"text\": {\"type\": \"string\", \"doc\": \"The input string.\"}}\n\n    def create_outputs_schema(\n        self,\n    ) -> ValueMapSchema:\n        return {\"text\": {\"type\": \"string\", \"doc\": \"The replaced string.\"}}\n\n    def process(self, inputs: ValueMap, outputs: ValueMap) -> None:\n\n        text = inputs.get_value_data(\"text\")\n        repl_map = self.get_config_value(\"replacement_map\")\n        default = self.get_config_value(\"default_value\")\n\n        if text not in repl_map.keys():\n            if default is None:\n                result = text\n            else:\n                result = default\n        else:\n            result = repl_map[text]\n\n        outputs.set_value(\"text\", result)\n"
      }
    },
    "type_name": "module_type"
  },
  "kiara_model_types": {
    "group_title": "kiara_models.kiara_plugin.core_types",
    "item_infos": {
      "kiara_model_schema_metadata": {
        "type_name": "kiara_model_schema_metadata",
        "documentation": {
          "description": "File stats.",
          "doc": null
        },
        "authors": {
          "authors": [
            {
              "name": "Markus Binsteiner",
              "email": "markus@frkl.io"
            }
          ]
        },
        "context": {
          "references": {
            "source_repo": {
              "url": "https://github.com/DHARPA-Project/kiara_plugin.core_types",
              "desc": "The module package git repository."
            },
            "documentation": {
              "url": "https://DHARPA-Project.github.io/kiara_plugin.core_types/",
              "desc": "The url for the module package documentation."
            }
          },
          "tags": ["core_types"],
          "labels": {
            "package": "kiara_plugin.core_types"
          }
        },
        "python_class": {
          "python_class_name": "KiaraModelSchemaMetadata",
          "python_module_name": "kiara_plugin.core_types.models",
          "full_name": "kiara_plugin.core_types.models.KiaraModelSchemaMetadata"
        },
        "metadata_schema": {
          "additionalProperties": false,
          "description": "File stats.",
          "properties": {
            "kiara_model_id": {
              "description": "The id of the kiara model that is contained in this list.",
              "title": "Kiara Model Id",
              "type": "string"
            },
            "kiara_model_schema": {
              "description": "The (JSON) schema of the model.",
              "title": "Kiara Model Schema",
              "type": "string"
            }
          },
          "required": ["kiara_model_id", "kiara_model_schema"],
          "title": "KiaraModelSchemaMetadata",
          "type": "object"
        }
      },
      "kiara_model_list_metadata": {
        "type_name": "kiara_model_list_metadata",
        "documentation": {
          "description": "File stats.",
          "doc": null
        },
        "authors": {
          "authors": [
            {
              "name": "Markus Binsteiner",
              "email": "markus@frkl.io"
            }
          ]
        },
        "context": {
          "references": {
            "source_repo": {
              "url": "https://github.com/DHARPA-Project/kiara_plugin.core_types",
              "desc": "The module package git repository."
            },
            "documentation": {
              "url": "https://DHARPA-Project.github.io/kiara_plugin.core_types/",
              "desc": "The url for the module package documentation."
            }
          },
          "tags": ["core_types"],
          "labels": {
            "package": "kiara_plugin.core_types"
          }
        },
        "python_class": {
          "python_class_name": "KiaraModelListMetadata",
          "python_module_name": "kiara_plugin.core_types.models",
          "full_name": "kiara_plugin.core_types.models.KiaraModelListMetadata"
        },
        "metadata_schema": {
          "additionalProperties": false,
          "description": "File stats.",
          "properties": {
            "length": {
              "description": "The number of model instances that are contained in this list.",
              "title": "Length",
              "type": "integer"
            }
          },
          "required": ["length"],
          "title": "KiaraModelListMetadata",
          "type": "object"
        }
      }
    },
    "type_name": "kiara_model"
  },
  "operation_types": {
    "group_title": null,
    "item_infos": {},
    "type_name": "operation_type"
  },
  "operations": {
    "group_title": null,
    "item_infos": {
      "date.check_range": {
        "type_name": "date.check_range",
        "documentation": {
          "description": "Check whether a date falls within a specified date range.",
          "doc": "If none one of the inputs 'earliest' or 'latest' is set, this module will always return 'True'.\n\nReturn ``True`` if that's the case, otherwise ``False``."
        },
        "authors": {
          "authors": [
            {
              "name": "Markus Binsteiner",
              "email": "markus@frkl.io"
            }
          ]
        },
        "context": {
          "references": {
            "source_repo": {
              "url": "https://github.com/DHARPA-Project/kiara_plugin.core_types",
              "desc": "The module package git repository."
            },
            "documentation": {
              "url": "https://DHARPA-Project.github.io/kiara_plugin.core_types/",
              "desc": "The url for the module package documentation."
            }
          },
          "tags": ["core_types"],
          "labels": {
            "package": "kiara_plugin.core_types"
          }
        },
        "operation": {
          "module_type": "date.check_range",
          "module_config": {},
          "is_resolved": false,
          "operation_id": "date.check_range",
          "operation_details": {
            "operation_id": "date.check_range",
            "is_internal_operation": false
          },
          "doc": {
            "description": "Check whether a date falls within a specified date range.",
            "doc": "If none one of the inputs 'earliest' or 'latest' is set, this module will always return 'True'.\n\nReturn ``True`` if that's the case, otherwise ``False``."
          },
          "module_details": {
            "python_class_name": "DateRangeCheckModule",
            "python_module_name": "kiara_plugin.core_types.modules.date",
            "full_name": "kiara_plugin.core_types.modules.date.DateRangeCheckModule",
            "module_config": {
              "constants": {},
              "defaults": {}
            },
            "inputs_schema": {
              "date": {
                "type": "date",
                "type_config": {},
                "default": null,
                "optional": false,
                "is_constant": false,
                "doc": {
                  "description": "The date to check.",
                  "doc": null
                }
              },
              "earliest": {
                "type": "date",
                "type_config": {},
                "default": null,
                "optional": true,
                "is_constant": false,
                "doc": {
                  "description": "The earliest date that is allowed.",
                  "doc": null
                }
              },
              "latest": {
                "type": "date",
                "type_config": {},
                "default": null,
                "optional": true,
                "is_constant": false,
                "doc": {
                  "description": "The latest date that is allowed.",
                  "doc": null
                }
              }
            },
            "outputs_schema": {
              "within_range": {
                "type": "boolean",
                "type_config": {},
                "default": null,
                "optional": false,
                "is_constant": false,
                "doc": {
                  "description": "A boolean indicating whether the provided date was within the allowed range ('true'), or not ('false')",
                  "doc": null
                }
              }
            }
          },
          "metadata": {}
        },
        "operation_types": ["custom_module"],
        "input_fields": {
          "date": {
            "field_name": "date",
            "field_schema": {
              "type": "date",
              "type_config": {},
              "default": null,
              "optional": false,
              "is_constant": false,
              "doc": {
                "description": "The date to check.",
                "doc": null
              }
            },
            "data_type_info": {
              "data_type_name": "date",
              "data_type_config": {},
              "characteristics": {
                "is_scalar": true,
                "is_json_serializable": true
              },
              "data_type_class": {
                "python_class_name": "DateType",
                "python_module_name": "kiara_plugin.core_types.data_types",
                "full_name": "kiara_plugin.core_types.data_types.DateType"
              }
            },
            "value_required": true
          },
          "earliest": {
            "field_name": "earliest",
            "field_schema": {
              "type": "date",
              "type_config": {},
              "default": null,
              "optional": true,
              "is_constant": false,
              "doc": {
                "description": "The earliest date that is allowed.",
                "doc": null
              }
            },
            "data_type_info": {
              "data_type_name": "date",
              "data_type_config": {},
              "characteristics": {
                "is_scalar": true,
                "is_json_serializable": true
              },
              "data_type_class": {
                "python_class_name": "DateType",
                "python_module_name": "kiara_plugin.core_types.data_types",
                "full_name": "kiara_plugin.core_types.data_types.DateType"
              }
            },
            "value_required": false
          },
          "latest": {
            "field_name": "latest",
            "field_schema": {
              "type": "date",
              "type_config": {},
              "default": null,
              "optional": true,
              "is_constant": false,
              "doc": {
                "description": "The latest date that is allowed.",
                "doc": null
              }
            },
            "data_type_info": {
              "data_type_name": "date",
              "data_type_config": {},
              "characteristics": {
                "is_scalar": true,
                "is_json_serializable": true
              },
              "data_type_class": {
                "python_class_name": "DateType",
                "python_module_name": "kiara_plugin.core_types.data_types",
                "full_name": "kiara_plugin.core_types.data_types.DateType"
              }
            },
            "value_required": false
          }
        },
        "output_fields": {
          "within_range": {
            "field_name": "within_range",
            "field_schema": {
              "type": "boolean",
              "type_config": {},
              "default": null,
              "optional": false,
              "is_constant": false,
              "doc": {
                "description": "A boolean indicating whether the provided date was within the allowed range ('true'), or not ('false')",
                "doc": null
              }
            },
            "data_type_info": {
              "data_type_name": "boolean",
              "data_type_config": {},
              "characteristics": {
                "is_scalar": true,
                "is_json_serializable": true
              },
              "data_type_class": {
                "python_class_name": "BooleanType",
                "python_module_name": "kiara.data_types.included_core_types",
                "full_name": "kiara.data_types.included_core_types.BooleanType"
              }
            },
            "value_required": true
          }
        }
      },
      "date.extract_from_string": {
        "type_name": "date.extract_from_string",
        "documentation": {
          "description": "Extract a date object from a string.",
          "doc": "This module is very bare bones so far, only using the standard parser from the\n[dateutil](https://github.com/dateutil/dateutil) package to parse strings into dates."
        },
        "authors": {
          "authors": [
            {
              "name": "Markus Binsteiner",
              "email": "markus@frkl.io"
            }
          ]
        },
        "context": {
          "references": {
            "source_repo": {
              "url": "https://github.com/DHARPA-Project/kiara_plugin.core_types",
              "desc": "The module package git repository."
            },
            "documentation": {
              "url": "https://DHARPA-Project.github.io/kiara_plugin.core_types/",
              "desc": "The url for the module package documentation."
            }
          },
          "tags": ["core_types"],
          "labels": {
            "package": "kiara_plugin.core_types"
          }
        },
        "operation": {
          "module_type": "date.extract_from_string",
          "module_config": {},
          "is_resolved": false,
          "operation_id": "date.extract_from_string",
          "operation_details": {
            "operation_id": "date.extract_from_string",
            "is_internal_operation": false
          },
          "doc": {
            "description": "Extract a date object from a string.",
            "doc": "This module is very bare bones so far, only using the standard parser from the\n[dateutil](https://github.com/dateutil/dateutil) package to parse strings into dates."
          },
          "module_details": {
            "python_class_name": "ExtractDateModule",
            "python_module_name": "kiara_plugin.core_types.modules.date",
            "full_name": "kiara_plugin.core_types.modules.date.ExtractDateModule",
            "module_config": {
              "constants": {},
              "defaults": {}
            },
            "inputs_schema": {
              "text": {
                "type": "string",
                "type_config": {},
                "default": null,
                "optional": false,
                "is_constant": false,
                "doc": {
                  "description": "The input string.",
                  "doc": null
                }
              }
            },
            "outputs_schema": {
              "date": {
                "type": "date",
                "type_config": {},
                "default": null,
                "optional": false,
                "is_constant": false,
                "doc": {
                  "description": "The date extracted from the input string.",
                  "doc": null
                }
              }
            }
          },
          "metadata": {}
        },
        "operation_types": ["custom_module"],
        "input_fields": {
          "text": {
            "field_name": "text",
            "field_schema": {
              "type": "string",
              "type_config": {},
              "default": null,
              "optional": false,
              "is_constant": false,
              "doc": {
                "description": "The input string.",
                "doc": null
              }
            },
            "data_type_info": {
              "data_type_name": "string",
              "data_type_config": {
                "allowed_strings": null
              },
              "characteristics": {
                "is_scalar": true,
                "is_json_serializable": true
              },
              "data_type_class": {
                "python_class_name": "StringType",
                "python_module_name": "kiara.data_types.included_core_types",
                "full_name": "kiara.data_types.included_core_types.StringType"
              }
            },
            "value_required": true
          }
        },
        "output_fields": {
          "date": {
            "field_name": "date",
            "field_schema": {
              "type": "date",
              "type_config": {},
              "default": null,
              "optional": false,
              "is_constant": false,
              "doc": {
                "description": "The date extracted from the input string.",
                "doc": null
              }
            },
            "data_type_info": {
              "data_type_name": "date",
              "data_type_config": {},
              "characteristics": {
                "is_scalar": true,
                "is_json_serializable": true
              },
              "data_type_class": {
                "python_class_name": "DateType",
                "python_module_name": "kiara_plugin.core_types.data_types",
                "full_name": "kiara_plugin.core_types.data_types.DateType"
              }
            },
            "value_required": true
          }
        }
      },
      "deserialize.kiara_model.as.python_object": {
        "type_name": "deserialize.kiara_model.as.python_object",
        "documentation": {
          "description": "-- n/a --",
          "doc": null
        },
        "authors": {
          "authors": [
            {
              "name": "Markus Binsteiner",
              "email": "markus@frkl.io"
            }
          ]
        },
        "context": {
          "references": {
            "source_repo": {
              "url": "https://github.com/DHARPA-Project/kiara_plugin.core_types",
              "desc": "The module package git repository."
            },
            "documentation": {
              "url": "https://DHARPA-Project.github.io/kiara_plugin.core_types/",
              "desc": "The url for the module package documentation."
            }
          },
          "tags": ["core_types"],
          "labels": {
            "package": "kiara_plugin.core_types"
          }
        },
        "operation": {
          "module_type": "load.kiara_model",
          "module_config": {
            "value_type": "kiara_model",
            "target_profile": "python_object",
            "serialization_profile": "json"
          },
          "is_resolved": false,
          "operation_id": "deserialize.kiara_model.as.python_object",
          "operation_details": {
            "operation_id": "deserialize.kiara_model.as.python_object",
            "is_internal_operation": true
          },
          "doc": {
            "description": "-- n/a --",
            "doc": null
          },
          "module_details": {
            "python_class_name": "LoadKiaraModel",
            "python_module_name": "kiara_plugin.core_types.modules.models",
            "full_name": "kiara_plugin.core_types.modules.models.LoadKiaraModel",
            "module_config": {
              "constants": {},
              "defaults": {},
              "value_type": "kiara_model",
              "target_profile": "python_object",
              "serialization_profile": "json"
            },
            "inputs_schema": {
              "kiara_model": {
                "type": "kiara_model",
                "type_config": {},
                "default": null,
                "optional": false,
                "is_constant": false,
                "doc": {
                  "description": "The value object.",
                  "doc": null
                }
              },
              "deserialization_config": {
                "type": "any",
                "type_config": {},
                "default": null,
                "optional": true,
                "is_constant": false,
                "doc": {
                  "description": "Serialization-format specific configuration.",
                  "doc": null
                }
              }
            },
            "outputs_schema": {
              "python_object": {
                "type": "python_object",
                "type_config": {},
                "default": null,
                "optional": false,
                "is_constant": false,
                "doc": {
                  "description": "The deserialized python object instance.",
                  "doc": null
                }
              }
            }
          },
          "metadata": {}
        },
        "operation_types": ["deserialize"],
        "input_fields": {
          "kiara_model": {
            "field_name": "kiara_model",
            "field_schema": {
              "type": "kiara_model",
              "type_config": {},
              "default": null,
              "optional": false,
              "is_constant": false,
              "doc": {
                "description": "The value object.",
                "doc": null
              }
            },
            "data_type_info": {
              "data_type_name": "kiara_model",
              "data_type_config": {
                "kiara_model_id": "you.must.specify.your.own.here"
              },
              "characteristics": {
                "is_scalar": false,
                "is_json_serializable": false
              },
              "data_type_class": {
                "python_class_name": "KiaraModelType",
                "python_module_name": "kiara_plugin.core_types.data_types.models",
                "full_name": "kiara_plugin.core_types.data_types.models.KiaraModelType"
              }
            },
            "value_required": true
          },
          "deserialization_config": {
            "field_name": "deserialization_config",
            "field_schema": {
              "type": "any",
              "type_config": {},
              "default": null,
              "optional": true,
              "is_constant": false,
              "doc": {
                "description": "Serialization-format specific configuration.",
                "doc": null
              }
            },
            "data_type_info": {
              "data_type_name": "any",
              "data_type_config": {},
              "characteristics": {
                "is_scalar": false,
                "is_json_serializable": false
              },
              "data_type_class": {
                "python_class_name": "AnyType",
                "python_module_name": "kiara.data_types.included_core_types",
                "full_name": "kiara.data_types.included_core_types.AnyType"
              }
            },
            "value_required": false
          }
        },
        "output_fields": {
          "python_object": {
            "field_name": "python_object",
            "field_schema": {
              "type": "python_object",
              "type_config": {},
              "default": null,
              "optional": false,
              "is_constant": false,
              "doc": {
                "description": "The deserialized python object instance.",
                "doc": null
              }
            },
            "data_type_info": {
              "data_type_name": "internal",
              "data_type_config": {},
              "characteristics": {
                "is_scalar": false,
                "is_json_serializable": false
              },
              "data_type_class": {
                "python_class_name": "PythonObjectType",
                "python_module_name": "kiara.data_types.included_core_types.serialization",
                "full_name": "kiara.data_types.included_core_types.serialization.PythonObjectType"
              }
            },
            "value_required": true
          }
        }
      },
      "deserialize.kiara_model_list.as.python_object": {
        "type_name": "deserialize.kiara_model_list.as.python_object",
        "documentation": {
          "description": "-- n/a --",
          "doc": null
        },
        "authors": {
          "authors": [
            {
              "name": "Markus Binsteiner",
              "email": "markus@frkl.io"
            }
          ]
        },
        "context": {
          "references": {
            "source_repo": {
              "url": "https://github.com/DHARPA-Project/kiara_plugin.core_types",
              "desc": "The module package git repository."
            },
            "documentation": {
              "url": "https://DHARPA-Project.github.io/kiara_plugin.core_types/",
              "desc": "The url for the module package documentation."
            }
          },
          "tags": ["core_types"],
          "labels": {
            "package": "kiara_plugin.core_types"
          }
        },
        "operation": {
          "module_type": "load.kiara_model_list",
          "module_config": {
            "value_type": "kiara_model_list",
            "target_profile": "python_object",
            "serialization_profile": "json"
          },
          "is_resolved": false,
          "operation_id": "deserialize.kiara_model_list.as.python_object",
          "operation_details": {
            "operation_id": "deserialize.kiara_model_list.as.python_object",
            "is_internal_operation": true
          },
          "doc": {
            "description": "-- n/a --",
            "doc": null
          },
          "module_details": {
            "python_class_name": "LoadKiaraModelList",
            "python_module_name": "kiara_plugin.core_types.modules.models",
            "full_name": "kiara_plugin.core_types.modules.models.LoadKiaraModelList",
            "module_config": {
              "constants": {},
              "defaults": {},
              "value_type": "kiara_model_list",
              "target_profile": "python_object",
              "serialization_profile": "json"
            },
            "inputs_schema": {
              "kiara_model_list": {
                "type": "kiara_model_list",
                "type_config": {},
                "default": null,
                "optional": false,
                "is_constant": false,
                "doc": {
                  "description": "The value object.",
                  "doc": null
                }
              },
              "deserialization_config": {
                "type": "any",
                "type_config": {},
                "default": null,
                "optional": true,
                "is_constant": false,
                "doc": {
                  "description": "Serialization-format specific configuration.",
                  "doc": null
                }
              }
            },
            "outputs_schema": {
              "python_object": {
                "type": "python_object",
                "type_config": {},
                "default": null,
                "optional": false,
                "is_constant": false,
                "doc": {
                  "description": "The deserialized python object instance.",
                  "doc": null
                }
              }
            }
          },
          "metadata": {}
        },
        "operation_types": ["deserialize"],
        "input_fields": {
          "kiara_model_list": {
            "field_name": "kiara_model_list",
            "field_schema": {
              "type": "kiara_model_list",
              "type_config": {},
              "default": null,
              "optional": false,
              "is_constant": false,
              "doc": {
                "description": "The value object.",
                "doc": null
              }
            },
            "data_type_info": {
              "data_type_name": "kiara_model_list",
              "data_type_config": {
                "kiara_model_id": "you.must.specify.your.own.here"
              },
              "characteristics": {
                "is_scalar": false,
                "is_json_serializable": false
              },
              "data_type_class": {
                "python_class_name": "KiaraModelListType",
                "python_module_name": "kiara_plugin.core_types.data_types.models",
                "full_name": "kiara_plugin.core_types.data_types.models.KiaraModelListType"
              }
            },
            "value_required": true
          },
          "deserialization_config": {
            "field_name": "deserialization_config",
            "field_schema": {
              "type": "any",
              "type_config": {},
              "default": null,
              "optional": true,
              "is_constant": false,
              "doc": {
                "description": "Serialization-format specific configuration.",
                "doc": null
              }
            },
            "data_type_info": {
              "data_type_name": "any",
              "data_type_config": {},
              "characteristics": {
                "is_scalar": false,
                "is_json_serializable": false
              },
              "data_type_class": {
                "python_class_name": "AnyType",
                "python_module_name": "kiara.data_types.included_core_types",
                "full_name": "kiara.data_types.included_core_types.AnyType"
              }
            },
            "value_required": false
          }
        },
        "output_fields": {
          "python_object": {
            "field_name": "python_object",
            "field_schema": {
              "type": "python_object",
              "type_config": {},
              "default": null,
              "optional": false,
              "is_constant": false,
              "doc": {
                "description": "The deserialized python object instance.",
                "doc": null
              }
            },
            "data_type_info": {
              "data_type_name": "internal",
              "data_type_config": {},
              "characteristics": {
                "is_scalar": false,
                "is_json_serializable": false
              },
              "data_type_class": {
                "python_class_name": "PythonObjectType",
                "python_module_name": "kiara.data_types.included_core_types.serialization",
                "full_name": "kiara.data_types.included_core_types.serialization.PythonObjectType"
              }
            },
            "value_required": true
          }
        }
      },
      "list.contains": {
        "type_name": "list.contains",
        "documentation": {
          "description": "Check whether an element is in a list.",
          "doc": null
        },
        "authors": {
          "authors": [
            {
              "name": "Markus Binsteiner",
              "email": "markus@frkl.io"
            }
          ]
        },
        "context": {
          "references": {
            "source_repo": {
              "url": "https://github.com/DHARPA-Project/kiara_plugin.core_types",
              "desc": "The module package git repository."
            },
            "documentation": {
              "url": "https://DHARPA-Project.github.io/kiara_plugin.core_types/",
              "desc": "The url for the module package documentation."
            }
          },
          "tags": ["core_types"],
          "labels": {
            "package": "kiara_plugin.core_types"
          }
        },
        "operation": {
          "module_type": "list.contains",
          "module_config": {},
          "is_resolved": false,
          "operation_id": "list.contains",
          "operation_details": {
            "operation_id": "list.contains",
            "is_internal_operation": false
          },
          "doc": {
            "description": "Check whether an element is in a list.",
            "doc": null
          },
          "module_details": {
            "python_class_name": "IncludedInListCheckModule",
            "python_module_name": "kiara_plugin.core_types.modules.list",
            "full_name": "kiara_plugin.core_types.modules.list.IncludedInListCheckModule",
            "module_config": {
              "constants": {},
              "defaults": {}
            },
            "inputs_schema": {
              "list": {
                "type": "list",
                "type_config": {},
                "default": null,
                "optional": false,
                "is_constant": false,
                "doc": {
                  "description": "The list.",
                  "doc": null
                }
              },
              "item": {
                "type": "any",
                "type_config": {},
                "default": null,
                "optional": false,
                "is_constant": false,
                "doc": {
                  "description": "The element to check for inclusion in the list.",
                  "doc": null
                }
              }
            },
            "outputs_schema": {
              "is_included": {
                "type": "boolean",
                "type_config": {},
                "default": null,
                "optional": false,
                "is_constant": false,
                "doc": {
                  "description": "Whether the element is in the list, or not.",
                  "doc": null
                }
              }
            }
          },
          "metadata": {}
        },
        "operation_types": ["custom_module"],
        "input_fields": {
          "list": {
            "field_name": "list",
            "field_schema": {
              "type": "list",
              "type_config": {},
              "default": null,
              "optional": false,
              "is_constant": false,
              "doc": {
                "description": "The list.",
                "doc": null
              }
            },
            "data_type_info": {
              "data_type_name": "list",
              "data_type_config": {},
              "characteristics": {
                "is_scalar": false,
                "is_json_serializable": true
              },
              "data_type_class": {
                "python_class_name": "ListValueType",
                "python_module_name": "kiara_plugin.core_types.data_types",
                "full_name": "kiara_plugin.core_types.data_types.ListValueType"
              }
            },
            "value_required": true
          },
          "item": {
            "field_name": "item",
            "field_schema": {
              "type": "any",
              "type_config": {},
              "default": null,
              "optional": false,
              "is_constant": false,
              "doc": {
                "description": "The element to check for inclusion in the list.",
                "doc": null
              }
            },
            "data_type_info": {
              "data_type_name": "any",
              "data_type_config": {},
              "characteristics": {
                "is_scalar": false,
                "is_json_serializable": false
              },
              "data_type_class": {
                "python_class_name": "AnyType",
                "python_module_name": "kiara.data_types.included_core_types",
                "full_name": "kiara.data_types.included_core_types.AnyType"
              }
            },
            "value_required": true
          }
        },
        "output_fields": {
          "is_included": {
            "field_name": "is_included",
            "field_schema": {
              "type": "boolean",
              "type_config": {},
              "default": null,
              "optional": false,
              "is_constant": false,
              "doc": {
                "description": "Whether the element is in the list, or not.",
                "doc": null
              }
            },
            "data_type_info": {
              "data_type_name": "boolean",
              "data_type_config": {},
              "characteristics": {
                "is_scalar": true,
                "is_json_serializable": true
              },
              "data_type_class": {
                "python_class_name": "BooleanType",
                "python_module_name": "kiara.data_types.included_core_types",
                "full_name": "kiara.data_types.included_core_types.BooleanType"
              }
            },
            "value_required": true
          }
        }
      },
      "logic.and": {
        "type_name": "logic.and",
        "documentation": {
          "description": "Returns 'True' if both inputs are 'True'.",
          "doc": null
        },
        "authors": {
          "authors": [
            {
              "name": "Markus Binsteiner",
              "email": "markus@frkl.io"
            }
          ]
        },
        "context": {
          "references": {
            "source_repo": {
              "url": "https://github.com/DHARPA-Project/kiara_plugin.core_types",
              "desc": "The module package git repository."
            },
            "documentation": {
              "url": "https://DHARPA-Project.github.io/kiara_plugin.core_types/",
              "desc": "The url for the module package documentation."
            }
          },
          "tags": ["core_types"],
          "labels": {
            "package": "kiara_plugin.core_types"
          }
        },
        "operation": {
          "module_type": "logic.and",
          "module_config": {},
          "is_resolved": false,
          "operation_id": "logic.and",
          "operation_details": {
            "operation_id": "logic.and",
            "is_internal_operation": false
          },
          "doc": {
            "description": "Returns 'True' if both inputs are 'True'.",
            "doc": null
          },
          "module_details": {
            "python_class_name": "AndModule",
            "python_module_name": "kiara_plugin.core_types.modules.boolean",
            "full_name": "kiara_plugin.core_types.modules.boolean.AndModule",
            "module_config": {
              "constants": {},
              "defaults": {},
              "delay": 0.0
            },
            "inputs_schema": {
              "a": {
                "type": "boolean",
                "type_config": {},
                "default": null,
                "optional": false,
                "is_constant": false,
                "doc": {
                  "description": "A boolean describing this input state.",
                  "doc": null
                }
              },
              "b": {
                "type": "boolean",
                "type_config": {},
                "default": null,
                "optional": false,
                "is_constant": false,
                "doc": {
                  "description": "A boolean describing this input state.",
                  "doc": null
                }
              }
            },
            "outputs_schema": {
              "y": {
                "type": "boolean",
                "type_config": {},
                "default": null,
                "optional": false,
                "is_constant": false,
                "doc": {
                  "description": "A boolean describing the module output state.",
                  "doc": null
                }
              }
            }
          },
          "metadata": {}
        },
        "operation_types": ["custom_module"],
        "input_fields": {
          "a": {
            "field_name": "a",
            "field_schema": {
              "type": "boolean",
              "type_config": {},
              "default": null,
              "optional": false,
              "is_constant": false,
              "doc": {
                "description": "A boolean describing this input state.",
                "doc": null
              }
            },
            "data_type_info": {
              "data_type_name": "boolean",
              "data_type_config": {},
              "characteristics": {
                "is_scalar": true,
                "is_json_serializable": true
              },
              "data_type_class": {
                "python_class_name": "BooleanType",
                "python_module_name": "kiara.data_types.included_core_types",
                "full_name": "kiara.data_types.included_core_types.BooleanType"
              }
            },
            "value_required": true
          },
          "b": {
            "field_name": "b",
            "field_schema": {
              "type": "boolean",
              "type_config": {},
              "default": null,
              "optional": false,
              "is_constant": false,
              "doc": {
                "description": "A boolean describing this input state.",
                "doc": null
              }
            },
            "data_type_info": {
              "data_type_name": "boolean",
              "data_type_config": {},
              "characteristics": {
                "is_scalar": true,
                "is_json_serializable": true
              },
              "data_type_class": {
                "python_class_name": "BooleanType",
                "python_module_name": "kiara.data_types.included_core_types",
                "full_name": "kiara.data_types.included_core_types.BooleanType"
              }
            },
            "value_required": true
          }
        },
        "output_fields": {
          "y": {
            "field_name": "y",
            "field_schema": {
              "type": "boolean",
              "type_config": {},
              "default": null,
              "optional": false,
              "is_constant": false,
              "doc": {
                "description": "A boolean describing the module output state.",
                "doc": null
              }
            },
            "data_type_info": {
              "data_type_name": "boolean",
              "data_type_config": {},
              "characteristics": {
                "is_scalar": true,
                "is_json_serializable": true
              },
              "data_type_class": {
                "python_class_name": "BooleanType",
                "python_module_name": "kiara.data_types.included_core_types",
                "full_name": "kiara.data_types.included_core_types.BooleanType"
              }
            },
            "value_required": true
          }
        }
      },
      "logic.nand": {
        "type_name": "logic.nand",
        "documentation": {
          "description": "Returns 'False' if both inputs are 'True'.",
          "doc": null
        },
        "authors": {
          "authors": [
            {
              "name": "Markus Binsteiner",
              "email": "markus@frkl.io"
            }
          ]
        },
        "context": {
          "references": {
            "source_repo": {
              "url": "https://github.com/DHARPA-Project/kiara",
              "desc": "The kiara project git repository."
            },
            "documentation": {
              "url": "https://dharpa.org/kiara_documentation/",
              "desc": "The url for kiara documentation."
            }
          },
          "tags": [],
          "labels": {
            "package": "kiara"
          }
        },
        "operation": {
          "module_type": "pipeline",
          "module_config": {
            "constants": {},
            "defaults": {},
            "pipeline_name": "logic.nand",
            "steps": [
              {
                "module_type": "logic.and",
                "module_config": {},
                "is_resolved": false,
                "step_id": "and",
                "manifest_src": {
                  "module_type": "logic.and",
                  "module_config": {},
                  "is_resolved": false
                },
                "input_links": {},
                "module_details": {
                  "python_class_name": "AndModule",
                  "python_module_name": "kiara_plugin.core_types.modules.boolean",
                  "full_name": "kiara_plugin.core_types.modules.boolean.AndModule",
                  "module_config": {
                    "constants": {},
                    "defaults": {},
                    "delay": 0.0
                  },
                  "inputs_schema": {
                    "a": {
                      "type": "boolean",
                      "type_config": {},
                      "default": null,
                      "optional": false,
                      "is_constant": false,
                      "doc": {
                        "description": "A boolean describing this input state.",
                        "doc": null
                      }
                    },
                    "b": {
                      "type": "boolean",
                      "type_config": {},
                      "default": null,
                      "optional": false,
                      "is_constant": false,
                      "doc": {
                        "description": "A boolean describing this input state.",
                        "doc": null
                      }
                    }
                  },
                  "outputs_schema": {
                    "y": {
                      "type": "boolean",
                      "type_config": {},
                      "default": null,
                      "optional": false,
                      "is_constant": false,
                      "doc": {
                        "description": "A boolean describing the module output state.",
                        "doc": null
                      }
                    }
                  }
                },
                "doc": {
                  "description": "Returns 'True' if both inputs are 'True'.",
                  "doc": null
                }
              },
              {
                "module_type": "logic.not",
                "module_config": {},
                "is_resolved": false,
                "step_id": "not",
                "manifest_src": {
                  "module_type": "logic.not",
                  "module_config": {},
                  "is_resolved": false
                },
                "input_links": {
                  "a": [
                    {
                      "step_id": "and",
                      "value_name": "y",
                      "sub_value": null
                    }
                  ]
                },
                "module_details": {
                  "python_class_name": "NotModule",
                  "python_module_name": "kiara_plugin.core_types.modules.boolean",
                  "full_name": "kiara_plugin.core_types.modules.boolean.NotModule",
                  "module_config": {
                    "constants": {},
                    "defaults": {},
                    "delay": 0.0
                  },
                  "inputs_schema": {
                    "a": {
                      "type": "boolean",
                      "type_config": {},
                      "default": null,
                      "optional": false,
                      "is_constant": false,
                      "doc": {
                        "description": "A boolean describing this input state.",
                        "doc": null
                      }
                    }
                  },
                  "outputs_schema": {
                    "y": {
                      "type": "boolean",
                      "type_config": {},
                      "default": null,
                      "optional": false,
                      "is_constant": false,
                      "doc": {
                        "description": "A boolean describing the module output state.",
                        "doc": null
                      }
                    }
                  }
                },
                "doc": {
                  "description": "Negates the input.",
                  "doc": null
                }
              }
            ],
            "input_aliases": {
              "and.a": "a",
              "and.b": "b"
            },
            "output_aliases": {
              "not.y": "y"
            },
            "doc": {
              "description": "Returns 'False' if both inputs are 'True'.",
              "doc": null
            },
            "context": {}
          },
          "is_resolved": false,
          "operation_id": "logic.nand",
          "operation_details": {
            "operation_id": "logic.nand",
            "is_internal_operation": false
          },
          "doc": {
            "description": "Returns 'False' if both inputs are 'True'.",
            "doc": null
          },
          "module_details": {
            "python_class_name": "PipelineModule",
            "python_module_name": "kiara.modules.included_core_modules.pipeline",
            "full_name": "kiara.modules.included_core_modules.pipeline.PipelineModule",
            "module_config": {
              "constants": {},
              "defaults": {},
              "pipeline_name": "logic.nand",
              "steps": [
                {
                  "module_type": "logic.and",
                  "module_config": {},
                  "is_resolved": false,
                  "step_id": "and",
                  "manifest_src": {
                    "module_type": "logic.and",
                    "module_config": {},
                    "is_resolved": false
                  },
                  "input_links": {},
                  "module_details": {
                    "python_class_name": "AndModule",
                    "python_module_name": "kiara_plugin.core_types.modules.boolean",
                    "full_name": "kiara_plugin.core_types.modules.boolean.AndModule",
                    "module_config": {
                      "constants": {},
                      "defaults": {},
                      "delay": 0.0
                    },
                    "inputs_schema": {
                      "a": {
                        "type": "boolean",
                        "type_config": {},
                        "default": null,
                        "optional": false,
                        "is_constant": false,
                        "doc": {
                          "description": "A boolean describing this input state.",
                          "doc": null
                        }
                      },
                      "b": {
                        "type": "boolean",
                        "type_config": {},
                        "default": null,
                        "optional": false,
                        "is_constant": false,
                        "doc": {
                          "description": "A boolean describing this input state.",
                          "doc": null
                        }
                      }
                    },
                    "outputs_schema": {
                      "y": {
                        "type": "boolean",
                        "type_config": {},
                        "default": null,
                        "optional": false,
                        "is_constant": false,
                        "doc": {
                          "description": "A boolean describing the module output state.",
                          "doc": null
                        }
                      }
                    }
                  },
                  "doc": {
                    "description": "Returns 'True' if both inputs are 'True'.",
                    "doc": null
                  }
                },
                {
                  "module_type": "logic.not",
                  "module_config": {},
                  "is_resolved": false,
                  "step_id": "not",
                  "manifest_src": {
                    "module_type": "logic.not",
                    "module_config": {},
                    "is_resolved": false
                  },
                  "input_links": {
                    "a": [
                      {
                        "step_id": "and",
                        "value_name": "y",
                        "sub_value": null
                      }
                    ]
                  },
                  "module_details": {
                    "python_class_name": "NotModule",
                    "python_module_name": "kiara_plugin.core_types.modules.boolean",
                    "full_name": "kiara_plugin.core_types.modules.boolean.NotModule",
                    "module_config": {
                      "constants": {},
                      "defaults": {},
                      "delay": 0.0
                    },
                    "inputs_schema": {
                      "a": {
                        "type": "boolean",
                        "type_config": {},
                        "default": null,
                        "optional": false,
                        "is_constant": false,
                        "doc": {
                          "description": "A boolean describing this input state.",
                          "doc": null
                        }
                      }
                    },
                    "outputs_schema": {
                      "y": {
                        "type": "boolean",
                        "type_config": {},
                        "default": null,
                        "optional": false,
                        "is_constant": false,
                        "doc": {
                          "description": "A boolean describing the module output state.",
                          "doc": null
                        }
                      }
                    }
                  },
                  "doc": {
                    "description": "Negates the input.",
                    "doc": null
                  }
                }
              ],
              "input_aliases": {
                "and.a": "a",
                "and.b": "b"
              },
              "output_aliases": {
                "not.y": "y"
              },
              "doc": {
                "description": "Returns 'False' if both inputs are 'True'.",
                "doc": null
              },
              "context": {}
            },
            "inputs_schema": {
              "a": {
                "type": "boolean",
                "type_config": {},
                "default": null,
                "optional": false,
                "is_constant": false,
                "doc": {
                  "description": "A boolean describing this input state.",
                  "doc": null
                }
              },
              "b": {
                "type": "boolean",
                "type_config": {},
                "default": null,
                "optional": false,
                "is_constant": false,
                "doc": {
                  "description": "A boolean describing this input state.",
                  "doc": null
                }
              }
            },
            "outputs_schema": {
              "y": {
                "type": "boolean",
                "type_config": {},
                "default": null,
                "optional": false,
                "is_constant": false,
                "doc": {
                  "description": "A boolean describing the module output state.",
                  "doc": null
                }
              }
            }
          },
          "metadata": {
            "authors": [
              {
                "name": "Markus Binsteiner",
                "email": "markus@frkl.io"
              }
            ],
            "description": "Kiara modules for: core-types",
            "references": {
              "source_repo": {
                "desc": "The module package git repository.",
                "url": "https://github.com/DHARPA-Project/kiara_plugin.core_types"
              },
              "documentation": {
                "desc": "The url for the module package documentation.",
                "url": "https://DHARPA-Project.github.io/kiara_plugin.core_types/"
              }
            },
            "tags": ["core_types"],
            "labels": {
              "package": "kiara_plugin.core_types"
            }
          }
        },
        "operation_types": ["pipeline"],
        "input_fields": {
          "a": {
            "field_name": "a",
            "field_schema": {
              "type": "boolean",
              "type_config": {},
              "default": null,
              "optional": false,
              "is_constant": false,
              "doc": {
                "description": "A boolean describing this input state.",
                "doc": null
              }
            },
            "data_type_info": {
              "data_type_name": "boolean",
              "data_type_config": {},
              "characteristics": {
                "is_scalar": true,
                "is_json_serializable": true
              },
              "data_type_class": {
                "python_class_name": "BooleanType",
                "python_module_name": "kiara.data_types.included_core_types",
                "full_name": "kiara.data_types.included_core_types.BooleanType"
              }
            },
            "value_required": true
          },
          "b": {
            "field_name": "b",
            "field_schema": {
              "type": "boolean",
              "type_config": {},
              "default": null,
              "optional": false,
              "is_constant": false,
              "doc": {
                "description": "A boolean describing this input state.",
                "doc": null
              }
            },
            "data_type_info": {
              "data_type_name": "boolean",
              "data_type_config": {},
              "characteristics": {
                "is_scalar": true,
                "is_json_serializable": true
              },
              "data_type_class": {
                "python_class_name": "BooleanType",
                "python_module_name": "kiara.data_types.included_core_types",
                "full_name": "kiara.data_types.included_core_types.BooleanType"
              }
            },
            "value_required": true
          }
        },
        "output_fields": {
          "y": {
            "field_name": "y",
            "field_schema": {
              "type": "boolean",
              "type_config": {},
              "default": null,
              "optional": false,
              "is_constant": false,
              "doc": {
                "description": "A boolean describing the module output state.",
                "doc": null
              }
            },
            "data_type_info": {
              "data_type_name": "boolean",
              "data_type_config": {},
              "characteristics": {
                "is_scalar": true,
                "is_json_serializable": true
              },
              "data_type_class": {
                "python_class_name": "BooleanType",
                "python_module_name": "kiara.data_types.included_core_types",
                "full_name": "kiara.data_types.included_core_types.BooleanType"
              }
            },
            "value_required": true
          }
        }
      },
      "logic.nor": {
        "type_name": "logic.nor",
        "documentation": {
          "description": "Returns 'True' if both inputs are 'False'.",
          "doc": null
        },
        "authors": {
          "authors": [
            {
              "name": "Markus Binsteiner",
              "email": "markus@frkl.io"
            }
          ]
        },
        "context": {
          "references": {
            "source_repo": {
              "url": "https://github.com/DHARPA-Project/kiara",
              "desc": "The kiara project git repository."
            },
            "documentation": {
              "url": "https://dharpa.org/kiara_documentation/",
              "desc": "The url for kiara documentation."
            }
          },
          "tags": [],
          "labels": {
            "package": "kiara"
          }
        },
        "operation": {
          "module_type": "pipeline",
          "module_config": {
            "constants": {},
            "defaults": {},
            "pipeline_name": "logic.nor",
            "steps": [
              {
                "module_type": "logic.or",
                "module_config": {},
                "is_resolved": false,
                "step_id": "or",
                "manifest_src": {
                  "module_type": "logic.or",
                  "module_config": {},
                  "is_resolved": false
                },
                "input_links": {},
                "module_details": {
                  "python_class_name": "OrModule",
                  "python_module_name": "kiara_plugin.core_types.modules.boolean",
                  "full_name": "kiara_plugin.core_types.modules.boolean.OrModule",
                  "module_config": {
                    "constants": {},
                    "defaults": {},
                    "delay": 0.0
                  },
                  "inputs_schema": {
                    "a": {
                      "type": "boolean",
                      "type_config": {},
                      "default": null,
                      "optional": false,
                      "is_constant": false,
                      "doc": {
                        "description": "A boolean describing this input state.",
                        "doc": null
                      }
                    },
                    "b": {
                      "type": "boolean",
                      "type_config": {},
                      "default": null,
                      "optional": false,
                      "is_constant": false,
                      "doc": {
                        "description": "A boolean describing this input state.",
                        "doc": null
                      }
                    }
                  },
                  "outputs_schema": {
                    "y": {
                      "type": "boolean",
                      "type_config": {},
                      "default": null,
                      "optional": false,
                      "is_constant": false,
                      "doc": {
                        "description": "A boolean describing the module output state.",
                        "doc": null
                      }
                    }
                  }
                },
                "doc": {
                  "description": "Returns 'True' if one of the inputs is 'True'.",
                  "doc": null
                }
              },
              {
                "module_type": "logic.not",
                "module_config": {},
                "is_resolved": false,
                "step_id": "not",
                "manifest_src": {
                  "module_type": "logic.not",
                  "module_config": {},
                  "is_resolved": false
                },
                "input_links": {
                  "a": [
                    {
                      "step_id": "or",
                      "value_name": "y",
                      "sub_value": null
                    }
                  ]
                },
                "module_details": {
                  "python_class_name": "NotModule",
                  "python_module_name": "kiara_plugin.core_types.modules.boolean",
                  "full_name": "kiara_plugin.core_types.modules.boolean.NotModule",
                  "module_config": {
                    "constants": {},
                    "defaults": {},
                    "delay": 0.0
                  },
                  "inputs_schema": {
                    "a": {
                      "type": "boolean",
                      "type_config": {},
                      "default": null,
                      "optional": false,
                      "is_constant": false,
                      "doc": {
                        "description": "A boolean describing this input state.",
                        "doc": null
                      }
                    }
                  },
                  "outputs_schema": {
                    "y": {
                      "type": "boolean",
                      "type_config": {},
                      "default": null,
                      "optional": false,
                      "is_constant": false,
                      "doc": {
                        "description": "A boolean describing the module output state.",
                        "doc": null
                      }
                    }
                  }
                },
                "doc": {
                  "description": "Negates the input.",
                  "doc": null
                }
              }
            ],
            "input_aliases": {
              "or.a": "a",
              "or.b": "b"
            },
            "output_aliases": {
              "not.y": "y"
            },
            "doc": {
              "description": "Returns 'True' if both inputs are 'False'.",
              "doc": null
            },
            "context": {}
          },
          "is_resolved": false,
          "operation_id": "logic.nor",
          "operation_details": {
            "operation_id": "logic.nor",
            "is_internal_operation": false
          },
          "doc": {
            "description": "Returns 'True' if both inputs are 'False'.",
            "doc": null
          },
          "module_details": {
            "python_class_name": "PipelineModule",
            "python_module_name": "kiara.modules.included_core_modules.pipeline",
            "full_name": "kiara.modules.included_core_modules.pipeline.PipelineModule",
            "module_config": {
              "constants": {},
              "defaults": {},
              "pipeline_name": "logic.nor",
              "steps": [
                {
                  "module_type": "logic.or",
                  "module_config": {},
                  "is_resolved": false,
                  "step_id": "or",
                  "manifest_src": {
                    "module_type": "logic.or",
                    "module_config": {},
                    "is_resolved": false
                  },
                  "input_links": {},
                  "module_details": {
                    "python_class_name": "OrModule",
                    "python_module_name": "kiara_plugin.core_types.modules.boolean",
                    "full_name": "kiara_plugin.core_types.modules.boolean.OrModule",
                    "module_config": {
                      "constants": {},
                      "defaults": {},
                      "delay": 0.0
                    },
                    "inputs_schema": {
                      "a": {
                        "type": "boolean",
                        "type_config": {},
                        "default": null,
                        "optional": false,
                        "is_constant": false,
                        "doc": {
                          "description": "A boolean describing this input state.",
                          "doc": null
                        }
                      },
                      "b": {
                        "type": "boolean",
                        "type_config": {},
                        "default": null,
                        "optional": false,
                        "is_constant": false,
                        "doc": {
                          "description": "A boolean describing this input state.",
                          "doc": null
                        }
                      }
                    },
                    "outputs_schema": {
                      "y": {
                        "type": "boolean",
                        "type_config": {},
                        "default": null,
                        "optional": false,
                        "is_constant": false,
                        "doc": {
                          "description": "A boolean describing the module output state.",
                          "doc": null
                        }
                      }
                    }
                  },
                  "doc": {
                    "description": "Returns 'True' if one of the inputs is 'True'.",
                    "doc": null
                  }
                },
                {
                  "module_type": "logic.not",
                  "module_config": {},
                  "is_resolved": false,
                  "step_id": "not",
                  "manifest_src": {
                    "module_type": "logic.not",
                    "module_config": {},
                    "is_resolved": false
                  },
                  "input_links": {
                    "a": [
                      {
                        "step_id": "or",
                        "value_name": "y",
                        "sub_value": null
                      }
                    ]
                  },
                  "module_details": {
                    "python_class_name": "NotModule",
                    "python_module_name": "kiara_plugin.core_types.modules.boolean",
                    "full_name": "kiara_plugin.core_types.modules.boolean.NotModule",
                    "module_config": {
                      "constants": {},
                      "defaults": {},
                      "delay": 0.0
                    },
                    "inputs_schema": {
                      "a": {
                        "type": "boolean",
                        "type_config": {},
                        "default": null,
                        "optional": false,
                        "is_constant": false,
                        "doc": {
                          "description": "A boolean describing this input state.",
                          "doc": null
                        }
                      }
                    },
                    "outputs_schema": {
                      "y": {
                        "type": "boolean",
                        "type_config": {},
                        "default": null,
                        "optional": false,
                        "is_constant": false,
                        "doc": {
                          "description": "A boolean describing the module output state.",
                          "doc": null
                        }
                      }
                    }
                  },
                  "doc": {
                    "description": "Negates the input.",
                    "doc": null
                  }
                }
              ],
              "input_aliases": {
                "or.a": "a",
                "or.b": "b"
              },
              "output_aliases": {
                "not.y": "y"
              },
              "doc": {
                "description": "Returns 'True' if both inputs are 'False'.",
                "doc": null
              },
              "context": {}
            },
            "inputs_schema": {
              "a": {
                "type": "boolean",
                "type_config": {},
                "default": null,
                "optional": false,
                "is_constant": false,
                "doc": {
                  "description": "A boolean describing this input state.",
                  "doc": null
                }
              },
              "b": {
                "type": "boolean",
                "type_config": {},
                "default": null,
                "optional": false,
                "is_constant": false,
                "doc": {
                  "description": "A boolean describing this input state.",
                  "doc": null
                }
              }
            },
            "outputs_schema": {
              "y": {
                "type": "boolean",
                "type_config": {},
                "default": null,
                "optional": false,
                "is_constant": false,
                "doc": {
                  "description": "A boolean describing the module output state.",
                  "doc": null
                }
              }
            }
          },
          "metadata": {
            "authors": [
              {
                "name": "Markus Binsteiner",
                "email": "markus@frkl.io"
              }
            ],
            "description": "Kiara modules for: core-types",
            "references": {
              "source_repo": {
                "desc": "The module package git repository.",
                "url": "https://github.com/DHARPA-Project/kiara_plugin.core_types"
              },
              "documentation": {
                "desc": "The url for the module package documentation.",
                "url": "https://DHARPA-Project.github.io/kiara_plugin.core_types/"
              }
            },
            "tags": ["core_types"],
            "labels": {
              "package": "kiara_plugin.core_types"
            }
          }
        },
        "operation_types": ["pipeline"],
        "input_fields": {
          "a": {
            "field_name": "a",
            "field_schema": {
              "type": "boolean",
              "type_config": {},
              "default": null,
              "optional": false,
              "is_constant": false,
              "doc": {
                "description": "A boolean describing this input state.",
                "doc": null
              }
            },
            "data_type_info": {
              "data_type_name": "boolean",
              "data_type_config": {},
              "characteristics": {
                "is_scalar": true,
                "is_json_serializable": true
              },
              "data_type_class": {
                "python_class_name": "BooleanType",
                "python_module_name": "kiara.data_types.included_core_types",
                "full_name": "kiara.data_types.included_core_types.BooleanType"
              }
            },
            "value_required": true
          },
          "b": {
            "field_name": "b",
            "field_schema": {
              "type": "boolean",
              "type_config": {},
              "default": null,
              "optional": false,
              "is_constant": false,
              "doc": {
                "description": "A boolean describing this input state.",
                "doc": null
              }
            },
            "data_type_info": {
              "data_type_name": "boolean",
              "data_type_config": {},
              "characteristics": {
                "is_scalar": true,
                "is_json_serializable": true
              },
              "data_type_class": {
                "python_class_name": "BooleanType",
                "python_module_name": "kiara.data_types.included_core_types",
                "full_name": "kiara.data_types.included_core_types.BooleanType"
              }
            },
            "value_required": true
          }
        },
        "output_fields": {
          "y": {
            "field_name": "y",
            "field_schema": {
              "type": "boolean",
              "type_config": {},
              "default": null,
              "optional": false,
              "is_constant": false,
              "doc": {
                "description": "A boolean describing the module output state.",
                "doc": null
              }
            },
            "data_type_info": {
              "data_type_name": "boolean",
              "data_type_config": {},
              "characteristics": {
                "is_scalar": true,
                "is_json_serializable": true
              },
              "data_type_class": {
                "python_class_name": "BooleanType",
                "python_module_name": "kiara.data_types.included_core_types",
                "full_name": "kiara.data_types.included_core_types.BooleanType"
              }
            },
            "value_required": true
          }
        }
      },
      "logic.not": {
        "type_name": "logic.not",
        "documentation": {
          "description": "Negates the input.",
          "doc": null
        },
        "authors": {
          "authors": [
            {
              "name": "Markus Binsteiner",
              "email": "markus@frkl.io"
            }
          ]
        },
        "context": {
          "references": {
            "source_repo": {
              "url": "https://github.com/DHARPA-Project/kiara_plugin.core_types",
              "desc": "The module package git repository."
            },
            "documentation": {
              "url": "https://DHARPA-Project.github.io/kiara_plugin.core_types/",
              "desc": "The url for the module package documentation."
            }
          },
          "tags": ["core_types"],
          "labels": {
            "package": "kiara_plugin.core_types"
          }
        },
        "operation": {
          "module_type": "logic.not",
          "module_config": {},
          "is_resolved": false,
          "operation_id": "logic.not",
          "operation_details": {
            "operation_id": "logic.not",
            "is_internal_operation": false
          },
          "doc": {
            "description": "Negates the input.",
            "doc": null
          },
          "module_details": {
            "python_class_name": "NotModule",
            "python_module_name": "kiara_plugin.core_types.modules.boolean",
            "full_name": "kiara_plugin.core_types.modules.boolean.NotModule",
            "module_config": {
              "constants": {},
              "defaults": {},
              "delay": 0.0
            },
            "inputs_schema": {
              "a": {
                "type": "boolean",
                "type_config": {},
                "default": null,
                "optional": false,
                "is_constant": false,
                "doc": {
                  "description": "A boolean describing this input state.",
                  "doc": null
                }
              }
            },
            "outputs_schema": {
              "y": {
                "type": "boolean",
                "type_config": {},
                "default": null,
                "optional": false,
                "is_constant": false,
                "doc": {
                  "description": "A boolean describing the module output state.",
                  "doc": null
                }
              }
            }
          },
          "metadata": {}
        },
        "operation_types": ["custom_module"],
        "input_fields": {
          "a": {
            "field_name": "a",
            "field_schema": {
              "type": "boolean",
              "type_config": {},
              "default": null,
              "optional": false,
              "is_constant": false,
              "doc": {
                "description": "A boolean describing this input state.",
                "doc": null
              }
            },
            "data_type_info": {
              "data_type_name": "boolean",
              "data_type_config": {},
              "characteristics": {
                "is_scalar": true,
                "is_json_serializable": true
              },
              "data_type_class": {
                "python_class_name": "BooleanType",
                "python_module_name": "kiara.data_types.included_core_types",
                "full_name": "kiara.data_types.included_core_types.BooleanType"
              }
            },
            "value_required": true
          }
        },
        "output_fields": {
          "y": {
            "field_name": "y",
            "field_schema": {
              "type": "boolean",
              "type_config": {},
              "default": null,
              "optional": false,
              "is_constant": false,
              "doc": {
                "description": "A boolean describing the module output state.",
                "doc": null
              }
            },
            "data_type_info": {
              "data_type_name": "boolean",
              "data_type_config": {},
              "characteristics": {
                "is_scalar": true,
                "is_json_serializable": true
              },
              "data_type_class": {
                "python_class_name": "BooleanType",
                "python_module_name": "kiara.data_types.included_core_types",
                "full_name": "kiara.data_types.included_core_types.BooleanType"
              }
            },
            "value_required": true
          }
        }
      },
      "logic.or": {
        "type_name": "logic.or",
        "documentation": {
          "description": "Returns 'True' if one of the inputs is 'True'.",
          "doc": null
        },
        "authors": {
          "authors": [
            {
              "name": "Markus Binsteiner",
              "email": "markus@frkl.io"
            }
          ]
        },
        "context": {
          "references": {
            "source_repo": {
              "url": "https://github.com/DHARPA-Project/kiara_plugin.core_types",
              "desc": "The module package git repository."
            },
            "documentation": {
              "url": "https://DHARPA-Project.github.io/kiara_plugin.core_types/",
              "desc": "The url for the module package documentation."
            }
          },
          "tags": ["core_types"],
          "labels": {
            "package": "kiara_plugin.core_types"
          }
        },
        "operation": {
          "module_type": "logic.or",
          "module_config": {},
          "is_resolved": false,
          "operation_id": "logic.or",
          "operation_details": {
            "operation_id": "logic.or",
            "is_internal_operation": false
          },
          "doc": {
            "description": "Returns 'True' if one of the inputs is 'True'.",
            "doc": null
          },
          "module_details": {
            "python_class_name": "OrModule",
            "python_module_name": "kiara_plugin.core_types.modules.boolean",
            "full_name": "kiara_plugin.core_types.modules.boolean.OrModule",
            "module_config": {
              "constants": {},
              "defaults": {},
              "delay": 0.0
            },
            "inputs_schema": {
              "a": {
                "type": "boolean",
                "type_config": {},
                "default": null,
                "optional": false,
                "is_constant": false,
                "doc": {
                  "description": "A boolean describing this input state.",
                  "doc": null
                }
              },
              "b": {
                "type": "boolean",
                "type_config": {},
                "default": null,
                "optional": false,
                "is_constant": false,
                "doc": {
                  "description": "A boolean describing this input state.",
                  "doc": null
                }
              }
            },
            "outputs_schema": {
              "y": {
                "type": "boolean",
                "type_config": {},
                "default": null,
                "optional": false,
                "is_constant": false,
                "doc": {
                  "description": "A boolean describing the module output state.",
                  "doc": null
                }
              }
            }
          },
          "metadata": {}
        },
        "operation_types": ["custom_module"],
        "input_fields": {
          "a": {
            "field_name": "a",
            "field_schema": {
              "type": "boolean",
              "type_config": {},
              "default": null,
              "optional": false,
              "is_constant": false,
              "doc": {
                "description": "A boolean describing this input state.",
                "doc": null
              }
            },
            "data_type_info": {
              "data_type_name": "boolean",
              "data_type_config": {},
              "characteristics": {
                "is_scalar": true,
                "is_json_serializable": true
              },
              "data_type_class": {
                "python_class_name": "BooleanType",
                "python_module_name": "kiara.data_types.included_core_types",
                "full_name": "kiara.data_types.included_core_types.BooleanType"
              }
            },
            "value_required": true
          },
          "b": {
            "field_name": "b",
            "field_schema": {
              "type": "boolean",
              "type_config": {},
              "default": null,
              "optional": false,
              "is_constant": false,
              "doc": {
                "description": "A boolean describing this input state.",
                "doc": null
              }
            },
            "data_type_info": {
              "data_type_name": "boolean",
              "data_type_config": {},
              "characteristics": {
                "is_scalar": true,
                "is_json_serializable": true
              },
              "data_type_class": {
                "python_class_name": "BooleanType",
                "python_module_name": "kiara.data_types.included_core_types",
                "full_name": "kiara.data_types.included_core_types.BooleanType"
              }
            },
            "value_required": true
          }
        },
        "output_fields": {
          "y": {
            "field_name": "y",
            "field_schema": {
              "type": "boolean",
              "type_config": {},
              "default": null,
              "optional": false,
              "is_constant": false,
              "doc": {
                "description": "A boolean describing the module output state.",
                "doc": null
              }
            },
            "data_type_info": {
              "data_type_name": "boolean",
              "data_type_config": {},
              "characteristics": {
                "is_scalar": true,
                "is_json_serializable": true
              },
              "data_type_class": {
                "python_class_name": "BooleanType",
                "python_module_name": "kiara.data_types.included_core_types",
                "full_name": "kiara.data_types.included_core_types.BooleanType"
              }
            },
            "value_required": true
          }
        }
      },
      "logic.xor": {
        "type_name": "logic.xor",
        "documentation": {
          "description": "Returns 'True' if exactly one of it's two inputs is 'True'.",
          "doc": null
        },
        "authors": {
          "authors": [
            {
              "name": "Markus Binsteiner",
              "email": "markus@frkl.io"
            }
          ]
        },
        "context": {
          "references": {
            "source_repo": {
              "url": "https://github.com/DHARPA-Project/kiara",
              "desc": "The kiara project git repository."
            },
            "documentation": {
              "url": "https://dharpa.org/kiara_documentation/",
              "desc": "The url for kiara documentation."
            }
          },
          "tags": [],
          "labels": {
            "package": "kiara"
          }
        },
        "operation": {
          "module_type": "pipeline",
          "module_config": {
            "constants": {},
            "defaults": {},
            "pipeline_name": "logic.xor",
            "steps": [
              {
                "module_type": "logic.or",
                "module_config": {},
                "is_resolved": false,
                "step_id": "or",
                "manifest_src": {
                  "module_type": "logic.or",
                  "module_config": {},
                  "is_resolved": false
                },
                "input_links": {},
                "module_details": {
                  "python_class_name": "OrModule",
                  "python_module_name": "kiara_plugin.core_types.modules.boolean",
                  "full_name": "kiara_plugin.core_types.modules.boolean.OrModule",
                  "module_config": {
                    "constants": {},
                    "defaults": {},
                    "delay": 0.0
                  },
                  "inputs_schema": {
                    "a": {
                      "type": "boolean",
                      "type_config": {},
                      "default": null,
                      "optional": false,
                      "is_constant": false,
                      "doc": {
                        "description": "A boolean describing this input state.",
                        "doc": null
                      }
                    },
                    "b": {
                      "type": "boolean",
                      "type_config": {},
                      "default": null,
                      "optional": false,
                      "is_constant": false,
                      "doc": {
                        "description": "A boolean describing this input state.",
                        "doc": null
                      }
                    }
                  },
                  "outputs_schema": {
                    "y": {
                      "type": "boolean",
                      "type_config": {},
                      "default": null,
                      "optional": false,
                      "is_constant": false,
                      "doc": {
                        "description": "A boolean describing the module output state.",
                        "doc": null
                      }
                    }
                  }
                },
                "doc": {
                  "description": "Returns 'True' if one of the inputs is 'True'.",
                  "doc": null
                }
              },
              {
                "module_type": "pipeline",
                "module_config": {
                  "constants": {},
                  "defaults": {},
                  "pipeline_name": "logic.nand",
                  "steps": [
                    {
                      "module_type": "logic.and",
                      "module_config": {},
                      "is_resolved": false,
                      "step_id": "and",
                      "manifest_src": {
                        "module_type": "logic.and",
                        "module_config": {},
                        "is_resolved": false
                      },
                      "input_links": {},
                      "module_details": {
                        "python_class_name": "AndModule",
                        "python_module_name": "kiara_plugin.core_types.modules.boolean",
                        "full_name": "kiara_plugin.core_types.modules.boolean.AndModule",
                        "module_config": {
                          "constants": {},
                          "defaults": {},
                          "delay": 0.0
                        },
                        "inputs_schema": {
                          "a": {
                            "type": "boolean",
                            "type_config": {},
                            "default": null,
                            "optional": false,
                            "is_constant": false,
                            "doc": {
                              "description": "A boolean describing this input state.",
                              "doc": null
                            }
                          },
                          "b": {
                            "type": "boolean",
                            "type_config": {},
                            "default": null,
                            "optional": false,
                            "is_constant": false,
                            "doc": {
                              "description": "A boolean describing this input state.",
                              "doc": null
                            }
                          }
                        },
                        "outputs_schema": {
                          "y": {
                            "type": "boolean",
                            "type_config": {},
                            "default": null,
                            "optional": false,
                            "is_constant": false,
                            "doc": {
                              "description": "A boolean describing the module output state.",
                              "doc": null
                            }
                          }
                        }
                      },
                      "doc": {
                        "description": "Returns 'True' if both inputs are 'True'.",
                        "doc": null
                      }
                    },
                    {
                      "module_type": "logic.not",
                      "module_config": {},
                      "is_resolved": false,
                      "step_id": "not",
                      "manifest_src": {
                        "module_type": "logic.not",
                        "module_config": {},
                        "is_resolved": false
                      },
                      "input_links": {
                        "a": [
                          {
                            "step_id": "and",
                            "value_name": "y",
                            "sub_value": null
                          }
                        ]
                      },
                      "module_details": {
                        "python_class_name": "NotModule",
                        "python_module_name": "kiara_plugin.core_types.modules.boolean",
                        "full_name": "kiara_plugin.core_types.modules.boolean.NotModule",
                        "module_config": {
                          "constants": {},
                          "defaults": {},
                          "delay": 0.0
                        },
                        "inputs_schema": {
                          "a": {
                            "type": "boolean",
                            "type_config": {},
                            "default": null,
                            "optional": false,
                            "is_constant": false,
                            "doc": {
                              "description": "A boolean describing this input state.",
                              "doc": null
                            }
                          }
                        },
                        "outputs_schema": {
                          "y": {
                            "type": "boolean",
                            "type_config": {},
                            "default": null,
                            "optional": false,
                            "is_constant": false,
                            "doc": {
                              "description": "A boolean describing the module output state.",
                              "doc": null
                            }
                          }
                        }
                      },
                      "doc": {
                        "description": "Negates the input.",
                        "doc": null
                      }
                    }
                  ],
                  "input_aliases": {
                    "and.a": "a",
                    "and.b": "b"
                  },
                  "output_aliases": {
                    "not.y": "y"
                  },
                  "doc": {
                    "description": "Returns 'False' if both inputs are 'True'.",
                    "doc": null
                  },
                  "context": {}
                },
                "is_resolved": false,
                "step_id": "nand",
                "manifest_src": {
                  "module_type": "logic.nand",
                  "module_config": {},
                  "is_resolved": false
                },
                "input_links": {},
                "module_details": {
                  "python_class_name": "PipelineModule",
                  "python_module_name": "kiara.modules.included_core_modules.pipeline",
                  "full_name": "kiara.modules.included_core_modules.pipeline.PipelineModule",
                  "module_config": {
                    "constants": {},
                    "defaults": {},
                    "pipeline_name": "logic.nand",
                    "steps": [
                      {
                        "module_type": "logic.and",
                        "module_config": {},
                        "is_resolved": false,
                        "step_id": "and",
                        "manifest_src": {
                          "module_type": "logic.and",
                          "module_config": {},
                          "is_resolved": false
                        },
                        "input_links": {},
                        "module_details": {
                          "python_class_name": "AndModule",
                          "python_module_name": "kiara_plugin.core_types.modules.boolean",
                          "full_name": "kiara_plugin.core_types.modules.boolean.AndModule",
                          "module_config": {
                            "constants": {},
                            "defaults": {},
                            "delay": 0.0
                          },
                          "inputs_schema": {
                            "a": {
                              "type": "boolean",
                              "type_config": {},
                              "default": null,
                              "optional": false,
                              "is_constant": false,
                              "doc": {
                                "description": "A boolean describing this input state.",
                                "doc": null
                              }
                            },
                            "b": {
                              "type": "boolean",
                              "type_config": {},
                              "default": null,
                              "optional": false,
                              "is_constant": false,
                              "doc": {
                                "description": "A boolean describing this input state.",
                                "doc": null
                              }
                            }
                          },
                          "outputs_schema": {
                            "y": {
                              "type": "boolean",
                              "type_config": {},
                              "default": null,
                              "optional": false,
                              "is_constant": false,
                              "doc": {
                                "description": "A boolean describing the module output state.",
                                "doc": null
                              }
                            }
                          }
                        },
                        "doc": {
                          "description": "Returns 'True' if both inputs are 'True'.",
                          "doc": null
                        }
                      },
                      {
                        "module_type": "logic.not",
                        "module_config": {},
                        "is_resolved": false,
                        "step_id": "not",
                        "manifest_src": {
                          "module_type": "logic.not",
                          "module_config": {},
                          "is_resolved": false
                        },
                        "input_links": {
                          "a": [
                            {
                              "step_id": "and",
                              "value_name": "y",
                              "sub_value": null
                            }
                          ]
                        },
                        "module_details": {
                          "python_class_name": "NotModule",
                          "python_module_name": "kiara_plugin.core_types.modules.boolean",
                          "full_name": "kiara_plugin.core_types.modules.boolean.NotModule",
                          "module_config": {
                            "constants": {},
                            "defaults": {},
                            "delay": 0.0
                          },
                          "inputs_schema": {
                            "a": {
                              "type": "boolean",
                              "type_config": {},
                              "default": null,
                              "optional": false,
                              "is_constant": false,
                              "doc": {
                                "description": "A boolean describing this input state.",
                                "doc": null
                              }
                            }
                          },
                          "outputs_schema": {
                            "y": {
                              "type": "boolean",
                              "type_config": {},
                              "default": null,
                              "optional": false,
                              "is_constant": false,
                              "doc": {
                                "description": "A boolean describing the module output state.",
                                "doc": null
                              }
                            }
                          }
                        },
                        "doc": {
                          "description": "Negates the input.",
                          "doc": null
                        }
                      }
                    ],
                    "input_aliases": {
                      "and.a": "a",
                      "and.b": "b"
                    },
                    "output_aliases": {
                      "not.y": "y"
                    },
                    "doc": {
                      "description": "Returns 'False' if both inputs are 'True'.",
                      "doc": null
                    },
                    "context": {}
                  },
                  "inputs_schema": {
                    "a": {
                      "type": "boolean",
                      "type_config": {},
                      "default": null,
                      "optional": false,
                      "is_constant": false,
                      "doc": {
                        "description": "A boolean describing this input state.",
                        "doc": null
                      }
                    },
                    "b": {
                      "type": "boolean",
                      "type_config": {},
                      "default": null,
                      "optional": false,
                      "is_constant": false,
                      "doc": {
                        "description": "A boolean describing this input state.",
                        "doc": null
                      }
                    }
                  },
                  "outputs_schema": {
                    "y": {
                      "type": "boolean",
                      "type_config": {},
                      "default": null,
                      "optional": false,
                      "is_constant": false,
                      "doc": {
                        "description": "A boolean describing the module output state.",
                        "doc": null
                      }
                    }
                  }
                },
                "doc": {
                  "description": "Returns 'False' if both inputs are 'True'.",
                  "doc": null
                }
              },
              {
                "module_type": "logic.and",
                "module_config": {},
                "is_resolved": false,
                "step_id": "and",
                "manifest_src": {
                  "module_type": "logic.and",
                  "module_config": {},
                  "is_resolved": false
                },
                "input_links": {
                  "a": [
                    {
                      "step_id": "or",
                      "value_name": "y",
                      "sub_value": null
                    }
                  ],
                  "b": [
                    {
                      "step_id": "nand",
                      "value_name": "y",
                      "sub_value": null
                    }
                  ]
                },
                "module_details": {
                  "python_class_name": "AndModule",
                  "python_module_name": "kiara_plugin.core_types.modules.boolean",
                  "full_name": "kiara_plugin.core_types.modules.boolean.AndModule",
                  "module_config": {
                    "constants": {},
                    "defaults": {},
                    "delay": 0.0
                  },
                  "inputs_schema": {
                    "a": {
                      "type": "boolean",
                      "type_config": {},
                      "default": null,
                      "optional": false,
                      "is_constant": false,
                      "doc": {
                        "description": "A boolean describing this input state.",
                        "doc": null
                      }
                    },
                    "b": {
                      "type": "boolean",
                      "type_config": {},
                      "default": null,
                      "optional": false,
                      "is_constant": false,
                      "doc": {
                        "description": "A boolean describing this input state.",
                        "doc": null
                      }
                    }
                  },
                  "outputs_schema": {
                    "y": {
                      "type": "boolean",
                      "type_config": {},
                      "default": null,
                      "optional": false,
                      "is_constant": false,
                      "doc": {
                        "description": "A boolean describing the module output state.",
                        "doc": null
                      }
                    }
                  }
                },
                "doc": {
                  "description": "Returns 'True' if both inputs are 'True'.",
                  "doc": null
                }
              }
            ],
            "input_aliases": {
              "or.a": "a",
              "or.b": "b",
              "nand.a": "a",
              "nand.b": "b"
            },
            "output_aliases": {
              "and.y": "y"
            },
            "doc": {
              "description": "Returns 'True' if exactly one of it's two inputs is 'True'.",
              "doc": null
            },
            "context": {}
          },
          "is_resolved": false,
          "operation_id": "logic.xor",
          "operation_details": {
            "operation_id": "logic.xor",
            "is_internal_operation": false
          },
          "doc": {
            "description": "Returns 'True' if exactly one of it's two inputs is 'True'.",
            "doc": null
          },
          "module_details": {
            "python_class_name": "PipelineModule",
            "python_module_name": "kiara.modules.included_core_modules.pipeline",
            "full_name": "kiara.modules.included_core_modules.pipeline.PipelineModule",
            "module_config": {
              "constants": {},
              "defaults": {},
              "pipeline_name": "logic.xor",
              "steps": [
                {
                  "module_type": "logic.or",
                  "module_config": {},
                  "is_resolved": false,
                  "step_id": "or",
                  "manifest_src": {
                    "module_type": "logic.or",
                    "module_config": {},
                    "is_resolved": false
                  },
                  "input_links": {},
                  "module_details": {
                    "python_class_name": "OrModule",
                    "python_module_name": "kiara_plugin.core_types.modules.boolean",
                    "full_name": "kiara_plugin.core_types.modules.boolean.OrModule",
                    "module_config": {
                      "constants": {},
                      "defaults": {},
                      "delay": 0.0
                    },
                    "inputs_schema": {
                      "a": {
                        "type": "boolean",
                        "type_config": {},
                        "default": null,
                        "optional": false,
                        "is_constant": false,
                        "doc": {
                          "description": "A boolean describing this input state.",
                          "doc": null
                        }
                      },
                      "b": {
                        "type": "boolean",
                        "type_config": {},
                        "default": null,
                        "optional": false,
                        "is_constant": false,
                        "doc": {
                          "description": "A boolean describing this input state.",
                          "doc": null
                        }
                      }
                    },
                    "outputs_schema": {
                      "y": {
                        "type": "boolean",
                        "type_config": {},
                        "default": null,
                        "optional": false,
                        "is_constant": false,
                        "doc": {
                          "description": "A boolean describing the module output state.",
                          "doc": null
                        }
                      }
                    }
                  },
                  "doc": {
                    "description": "Returns 'True' if one of the inputs is 'True'.",
                    "doc": null
                  }
                },
                {
                  "module_type": "pipeline",
                  "module_config": {
                    "constants": {},
                    "defaults": {},
                    "pipeline_name": "logic.nand",
                    "steps": [
                      {
                        "module_type": "logic.and",
                        "module_config": {},
                        "is_resolved": false,
                        "step_id": "and",
                        "manifest_src": {
                          "module_type": "logic.and",
                          "module_config": {},
                          "is_resolved": false
                        },
                        "input_links": {},
                        "module_details": {
                          "python_class_name": "AndModule",
                          "python_module_name": "kiara_plugin.core_types.modules.boolean",
                          "full_name": "kiara_plugin.core_types.modules.boolean.AndModule",
                          "module_config": {
                            "constants": {},
                            "defaults": {},
                            "delay": 0.0
                          },
                          "inputs_schema": {
                            "a": {
                              "type": "boolean",
                              "type_config": {},
                              "default": null,
                              "optional": false,
                              "is_constant": false,
                              "doc": {
                                "description": "A boolean describing this input state.",
                                "doc": null
                              }
                            },
                            "b": {
                              "type": "boolean",
                              "type_config": {},
                              "default": null,
                              "optional": false,
                              "is_constant": false,
                              "doc": {
                                "description": "A boolean describing this input state.",
                                "doc": null
                              }
                            }
                          },
                          "outputs_schema": {
                            "y": {
                              "type": "boolean",
                              "type_config": {},
                              "default": null,
                              "optional": false,
                              "is_constant": false,
                              "doc": {
                                "description": "A boolean describing the module output state.",
                                "doc": null
                              }
                            }
                          }
                        },
                        "doc": {
                          "description": "Returns 'True' if both inputs are 'True'.",
                          "doc": null
                        }
                      },
                      {
                        "module_type": "logic.not",
                        "module_config": {},
                        "is_resolved": false,
                        "step_id": "not",
                        "manifest_src": {
                          "module_type": "logic.not",
                          "module_config": {},
                          "is_resolved": false
                        },
                        "input_links": {
                          "a": [
                            {
                              "step_id": "and",
                              "value_name": "y",
                              "sub_value": null
                            }
                          ]
                        },
                        "module_details": {
                          "python_class_name": "NotModule",
                          "python_module_name": "kiara_plugin.core_types.modules.boolean",
                          "full_name": "kiara_plugin.core_types.modules.boolean.NotModule",
                          "module_config": {
                            "constants": {},
                            "defaults": {},
                            "delay": 0.0
                          },
                          "inputs_schema": {
                            "a": {
                              "type": "boolean",
                              "type_config": {},
                              "default": null,
                              "optional": false,
                              "is_constant": false,
                              "doc": {
                                "description": "A boolean describing this input state.",
                                "doc": null
                              }
                            }
                          },
                          "outputs_schema": {
                            "y": {
                              "type": "boolean",
                              "type_config": {},
                              "default": null,
                              "optional": false,
                              "is_constant": false,
                              "doc": {
                                "description": "A boolean describing the module output state.",
                                "doc": null
                              }
                            }
                          }
                        },
                        "doc": {
                          "description": "Negates the input.",
                          "doc": null
                        }
                      }
                    ],
                    "input_aliases": {
                      "and.a": "a",
                      "and.b": "b"
                    },
                    "output_aliases": {
                      "not.y": "y"
                    },
                    "doc": {
                      "description": "Returns 'False' if both inputs are 'True'.",
                      "doc": null
                    },
                    "context": {}
                  },
                  "is_resolved": false,
                  "step_id": "nand",
                  "manifest_src": {
                    "module_type": "logic.nand",
                    "module_config": {},
                    "is_resolved": false
                  },
                  "input_links": {},
                  "module_details": {
                    "python_class_name": "PipelineModule",
                    "python_module_name": "kiara.modules.included_core_modules.pipeline",
                    "full_name": "kiara.modules.included_core_modules.pipeline.PipelineModule",
                    "module_config": {
                      "constants": {},
                      "defaults": {},
                      "pipeline_name": "logic.nand",
                      "steps": [
                        {
                          "module_type": "logic.and",
                          "module_config": {},
                          "is_resolved": false,
                          "step_id": "and",
                          "manifest_src": {
                            "module_type": "logic.and",
                            "module_config": {},
                            "is_resolved": false
                          },
                          "input_links": {},
                          "module_details": {
                            "python_class_name": "AndModule",
                            "python_module_name": "kiara_plugin.core_types.modules.boolean",
                            "full_name": "kiara_plugin.core_types.modules.boolean.AndModule",
                            "module_config": {
                              "constants": {},
                              "defaults": {},
                              "delay": 0.0
                            },
                            "inputs_schema": {
                              "a": {
                                "type": "boolean",
                                "type_config": {},
                                "default": null,
                                "optional": false,
                                "is_constant": false,
                                "doc": {
                                  "description": "A boolean describing this input state.",
                                  "doc": null
                                }
                              },
                              "b": {
                                "type": "boolean",
                                "type_config": {},
                                "default": null,
                                "optional": false,
                                "is_constant": false,
                                "doc": {
                                  "description": "A boolean describing this input state.",
                                  "doc": null
                                }
                              }
                            },
                            "outputs_schema": {
                              "y": {
                                "type": "boolean",
                                "type_config": {},
                                "default": null,
                                "optional": false,
                                "is_constant": false,
                                "doc": {
                                  "description": "A boolean describing the module output state.",
                                  "doc": null
                                }
                              }
                            }
                          },
                          "doc": {
                            "description": "Returns 'True' if both inputs are 'True'.",
                            "doc": null
                          }
                        },
                        {
                          "module_type": "logic.not",
                          "module_config": {},
                          "is_resolved": false,
                          "step_id": "not",
                          "manifest_src": {
                            "module_type": "logic.not",
                            "module_config": {},
                            "is_resolved": false
                          },
                          "input_links": {
                            "a": [
                              {
                                "step_id": "and",
                                "value_name": "y",
                                "sub_value": null
                              }
                            ]
                          },
                          "module_details": {
                            "python_class_name": "NotModule",
                            "python_module_name": "kiara_plugin.core_types.modules.boolean",
                            "full_name": "kiara_plugin.core_types.modules.boolean.NotModule",
                            "module_config": {
                              "constants": {},
                              "defaults": {},
                              "delay": 0.0
                            },
                            "inputs_schema": {
                              "a": {
                                "type": "boolean",
                                "type_config": {},
                                "default": null,
                                "optional": false,
                                "is_constant": false,
                                "doc": {
                                  "description": "A boolean describing this input state.",
                                  "doc": null
                                }
                              }
                            },
                            "outputs_schema": {
                              "y": {
                                "type": "boolean",
                                "type_config": {},
                                "default": null,
                                "optional": false,
                                "is_constant": false,
                                "doc": {
                                  "description": "A boolean describing the module output state.",
                                  "doc": null
                                }
                              }
                            }
                          },
                          "doc": {
                            "description": "Negates the input.",
                            "doc": null
                          }
                        }
                      ],
                      "input_aliases": {
                        "and.a": "a",
                        "and.b": "b"
                      },
                      "output_aliases": {
                        "not.y": "y"
                      },
                      "doc": {
                        "description": "Returns 'False' if both inputs are 'True'.",
                        "doc": null
                      },
                      "context": {}
                    },
                    "inputs_schema": {
                      "a": {
                        "type": "boolean",
                        "type_config": {},
                        "default": null,
                        "optional": false,
                        "is_constant": false,
                        "doc": {
                          "description": "A boolean describing this input state.",
                          "doc": null
                        }
                      },
                      "b": {
                        "type": "boolean",
                        "type_config": {},
                        "default": null,
                        "optional": false,
                        "is_constant": false,
                        "doc": {
                          "description": "A boolean describing this input state.",
                          "doc": null
                        }
                      }
                    },
                    "outputs_schema": {
                      "y": {
                        "type": "boolean",
                        "type_config": {},
                        "default": null,
                        "optional": false,
                        "is_constant": false,
                        "doc": {
                          "description": "A boolean describing the module output state.",
                          "doc": null
                        }
                      }
                    }
                  },
                  "doc": {
                    "description": "Returns 'False' if both inputs are 'True'.",
                    "doc": null
                  }
                },
                {
                  "module_type": "logic.and",
                  "module_config": {},
                  "is_resolved": false,
                  "step_id": "and",
                  "manifest_src": {
                    "module_type": "logic.and",
                    "module_config": {},
                    "is_resolved": false
                  },
                  "input_links": {
                    "a": [
                      {
                        "step_id": "or",
                        "value_name": "y",
                        "sub_value": null
                      }
                    ],
                    "b": [
                      {
                        "step_id": "nand",
                        "value_name": "y",
                        "sub_value": null
                      }
                    ]
                  },
                  "module_details": {
                    "python_class_name": "AndModule",
                    "python_module_name": "kiara_plugin.core_types.modules.boolean",
                    "full_name": "kiara_plugin.core_types.modules.boolean.AndModule",
                    "module_config": {
                      "constants": {},
                      "defaults": {},
                      "delay": 0.0
                    },
                    "inputs_schema": {
                      "a": {
                        "type": "boolean",
                        "type_config": {},
                        "default": null,
                        "optional": false,
                        "is_constant": false,
                        "doc": {
                          "description": "A boolean describing this input state.",
                          "doc": null
                        }
                      },
                      "b": {
                        "type": "boolean",
                        "type_config": {},
                        "default": null,
                        "optional": false,
                        "is_constant": false,
                        "doc": {
                          "description": "A boolean describing this input state.",
                          "doc": null
                        }
                      }
                    },
                    "outputs_schema": {
                      "y": {
                        "type": "boolean",
                        "type_config": {},
                        "default": null,
                        "optional": false,
                        "is_constant": false,
                        "doc": {
                          "description": "A boolean describing the module output state.",
                          "doc": null
                        }
                      }
                    }
                  },
                  "doc": {
                    "description": "Returns 'True' if both inputs are 'True'.",
                    "doc": null
                  }
                }
              ],
              "input_aliases": {
                "or.a": "a",
                "or.b": "b",
                "nand.a": "a",
                "nand.b": "b"
              },
              "output_aliases": {
                "and.y": "y"
              },
              "doc": {
                "description": "Returns 'True' if exactly one of it's two inputs is 'True'.",
                "doc": null
              },
              "context": {}
            },
            "inputs_schema": {
              "a": {
                "type": "boolean",
                "type_config": {},
                "default": null,
                "optional": false,
                "is_constant": false,
                "doc": {
                  "description": "A boolean describing this input state.",
                  "doc": null
                }
              },
              "b": {
                "type": "boolean",
                "type_config": {},
                "default": null,
                "optional": false,
                "is_constant": false,
                "doc": {
                  "description": "A boolean describing this input state.",
                  "doc": null
                }
              }
            },
            "outputs_schema": {
              "y": {
                "type": "boolean",
                "type_config": {},
                "default": null,
                "optional": false,
                "is_constant": false,
                "doc": {
                  "description": "A boolean describing the module output state.",
                  "doc": null
                }
              }
            }
          },
          "metadata": {
            "authors": [
              {
                "name": "Markus Binsteiner",
                "email": "markus@frkl.io"
              }
            ],
            "description": "Kiara modules for: core-types",
            "references": {
              "source_repo": {
                "desc": "The module package git repository.",
                "url": "https://github.com/DHARPA-Project/kiara_plugin.core_types"
              },
              "documentation": {
                "desc": "The url for the module package documentation.",
                "url": "https://DHARPA-Project.github.io/kiara_plugin.core_types/"
              }
            },
            "tags": ["core_types"],
            "labels": {
              "package": "kiara_plugin.core_types"
            }
          }
        },
        "operation_types": ["pipeline"],
        "input_fields": {
          "a": {
            "field_name": "a",
            "field_schema": {
              "type": "boolean",
              "type_config": {},
              "default": null,
              "optional": false,
              "is_constant": false,
              "doc": {
                "description": "A boolean describing this input state.",
                "doc": null
              }
            },
            "data_type_info": {
              "data_type_name": "boolean",
              "data_type_config": {},
              "characteristics": {
                "is_scalar": true,
                "is_json_serializable": true
              },
              "data_type_class": {
                "python_class_name": "BooleanType",
                "python_module_name": "kiara.data_types.included_core_types",
                "full_name": "kiara.data_types.included_core_types.BooleanType"
              }
            },
            "value_required": true
          },
          "b": {
            "field_name": "b",
            "field_schema": {
              "type": "boolean",
              "type_config": {},
              "default": null,
              "optional": false,
              "is_constant": false,
              "doc": {
                "description": "A boolean describing this input state.",
                "doc": null
              }
            },
            "data_type_info": {
              "data_type_name": "boolean",
              "data_type_config": {},
              "characteristics": {
                "is_scalar": true,
                "is_json_serializable": true
              },
              "data_type_class": {
                "python_class_name": "BooleanType",
                "python_module_name": "kiara.data_types.included_core_types",
                "full_name": "kiara.data_types.included_core_types.BooleanType"
              }
            },
            "value_required": true
          }
        },
        "output_fields": {
          "y": {
            "field_name": "y",
            "field_schema": {
              "type": "boolean",
              "type_config": {},
              "default": null,
              "optional": false,
              "is_constant": false,
              "doc": {
                "description": "A boolean describing the module output state.",
                "doc": null
              }
            },
            "data_type_info": {
              "data_type_name": "boolean",
              "data_type_config": {},
              "characteristics": {
                "is_scalar": true,
                "is_json_serializable": true
              },
              "data_type_class": {
                "python_class_name": "BooleanType",
                "python_module_name": "kiara.data_types.included_core_types",
                "full_name": "kiara.data_types.included_core_types.BooleanType"
              }
            },
            "value_required": true
          }
        }
      },
      "string_filter.tokens": {
        "type_name": "string_filter.tokens",
        "documentation": {
          "description": "-- n/a --",
          "doc": null
        },
        "authors": {
          "authors": [
            {
              "name": "Markus Binsteiner",
              "email": "markus@frkl.io"
            }
          ]
        },
        "context": {
          "references": {
            "source_repo": {
              "url": "https://github.com/DHARPA-Project/kiara_plugin.core_types",
              "desc": "The module package git repository."
            },
            "documentation": {
              "url": "https://DHARPA-Project.github.io/kiara_plugin.core_types/",
              "desc": "The url for the module package documentation."
            }
          },
          "tags": ["core_types"],
          "labels": {
            "package": "kiara_plugin.core_types"
          }
        },
        "operation": {
          "module_type": "string.filters",
          "module_config": {
            "filter_name": "tokens"
          },
          "is_resolved": false,
          "operation_id": "string_filter.tokens",
          "operation_details": {
            "operation_id": "string_filter.tokens",
            "is_internal_operation": false
          },
          "doc": {
            "description": "-- n/a --",
            "doc": null
          },
          "module_details": {
            "python_class_name": "StringFiltersModule",
            "python_module_name": "kiara_plugin.core_types.modules.string",
            "full_name": "kiara_plugin.core_types.modules.string.StringFiltersModule",
            "module_config": {
              "constants": {},
              "defaults": {},
              "filter_name": "tokens"
            },
            "inputs_schema": {
              "value": {
                "type": "string",
                "type_config": {},
                "default": null,
                "optional": false,
                "is_constant": false,
                "doc": {
                  "description": "A value of type 'string'.",
                  "doc": null
                }
              },
              "filter_tokens": {
                "type": "list",
                "type_config": {},
                "default": null,
                "optional": true,
                "is_constant": false,
                "doc": {
                  "description": "A list of tokens to filter out.",
                  "doc": null
                }
              },
              "replacement": {
                "type": "string",
                "type_config": {},
                "default": "",
                "optional": true,
                "is_constant": false,
                "doc": {
                  "description": "The string to replace the tokens with.",
                  "doc": null
                }
              }
            },
            "outputs_schema": {
              "value": {
                "type": "string",
                "type_config": {},
                "default": null,
                "optional": false,
                "is_constant": false,
                "doc": {
                  "description": "The filtered value.",
                  "doc": null
                }
              }
            }
          },
          "metadata": {}
        },
        "operation_types": ["filter"],
        "input_fields": {
          "value": {
            "field_name": "value",
            "field_schema": {
              "type": "string",
              "type_config": {},
              "default": null,
              "optional": false,
              "is_constant": false,
              "doc": {
                "description": "A value of type 'string'.",
                "doc": null
              }
            },
            "data_type_info": {
              "data_type_name": "string",
              "data_type_config": {
                "allowed_strings": null
              },
              "characteristics": {
                "is_scalar": true,
                "is_json_serializable": true
              },
              "data_type_class": {
                "python_class_name": "StringType",
                "python_module_name": "kiara.data_types.included_core_types",
                "full_name": "kiara.data_types.included_core_types.StringType"
              }
            },
            "value_required": true
          },
          "filter_tokens": {
            "field_name": "filter_tokens",
            "field_schema": {
              "type": "list",
              "type_config": {},
              "default": null,
              "optional": true,
              "is_constant": false,
              "doc": {
                "description": "A list of tokens to filter out.",
                "doc": null
              }
            },
            "data_type_info": {
              "data_type_name": "list",
              "data_type_config": {},
              "characteristics": {
                "is_scalar": false,
                "is_json_serializable": true
              },
              "data_type_class": {
                "python_class_name": "ListValueType",
                "python_module_name": "kiara_plugin.core_types.data_types",
                "full_name": "kiara_plugin.core_types.data_types.ListValueType"
              }
            },
            "value_required": false
          },
          "replacement": {
            "field_name": "replacement",
            "field_schema": {
              "type": "string",
              "type_config": {},
              "default": "",
              "optional": true,
              "is_constant": false,
              "doc": {
                "description": "The string to replace the tokens with.",
                "doc": null
              }
            },
            "data_type_info": {
              "data_type_name": "string",
              "data_type_config": {
                "allowed_strings": null
              },
              "characteristics": {
                "is_scalar": true,
                "is_json_serializable": true
              },
              "data_type_class": {
                "python_class_name": "StringType",
                "python_module_name": "kiara.data_types.included_core_types",
                "full_name": "kiara.data_types.included_core_types.StringType"
              }
            },
            "value_required": false
          }
        },
        "output_fields": {
          "value": {
            "field_name": "value",
            "field_schema": {
              "type": "string",
              "type_config": {},
              "default": null,
              "optional": false,
              "is_constant": false,
              "doc": {
                "description": "The filtered value.",
                "doc": null
              }
            },
            "data_type_info": {
              "data_type_name": "string",
              "data_type_config": {
                "allowed_strings": null
              },
              "characteristics": {
                "is_scalar": true,
                "is_json_serializable": true
              },
              "data_type_class": {
                "python_class_name": "StringType",
                "python_module_name": "kiara.data_types.included_core_types",
                "full_name": "kiara.data_types.included_core_types.StringType"
              }
            },
            "value_required": true
          }
        }
      }
    }
  }
}
